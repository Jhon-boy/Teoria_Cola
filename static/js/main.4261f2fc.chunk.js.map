{"version":3,"sources":["components/buttons/Button.tsx","components/navigation/Toolbar.tsx","config/name.routes.ts","assets/PICS.png","assets/PICM.png","assets/PFCS.png","assets/COLAS.jpg","components/menu/HomeMenu.tsx","views/Home.tsx","views/_404.tsx","library/queueing/cost/PICS.js","assets/FORMULAS_PICS.jpg","components/results/ResultItem.tsx","components/inputs/Input.tsx","components/inputs/OptionInput.tsx","library/queueing/Constants.ts","utils/MathUtils.ts","library/queueing/formulas/MM1.model.ts","views/MM1.tsx","library/queueing/formulas/MMK.model.ts","components/tabs/TabsMMK.tsx","assets/FORMULAS_PICM.jpg","views/MMK.tsx","library/queueing/formulas/MM1MM.model.ts","assets/FORMULAS_PFCS.jpg","views/MM1MM.tsx","library/queueing/formulas/MMKMM.model.ts","assets/FORMULAS_PFCM.jpg","views/MMKMM.tsx","views/ToDo.tsx","routes/MainStack.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["ButtonType","Toolbar","heightVh","className","Paper","sx","width","maxWidth","height","MenuList","to","MenuItem","ListItemIcon","fontSize","ListItemText","Divider","Typography","variant","color","Routes","home","theory","about","m_m_1","m_m_k","m_m_1_m_m","m_m_k_m_m","HomeMenu","CardMedia","image","COLAS","title","Card","PICS","CardContent","gutterBottom","component","CardActions","size","PICM","PFCS","PFCM","Home","style","minHeight","NotFoundPage","costoServidorTotal","k","costo","a","math","ResultItem","label","symbol","value","InputTypes","Button","text","type","onClick","OptionInputTypes","Input","placeholder","name","register","error","step","container","required","disabled","display","htmlFor","id","Number","message","SystemOrQueuing","TypeCalculate","OptionInput","option","Division","numerator","denominator","Power","base","elevation","Math","pow","Factorial","num","rval","i","MM1Model","lambda","miu","n","ro","p0","pn","lq","l","wq","w","wn","ln","this","system","System","typeCalculate","Fixed","getP0","getPn","getLq","getL","getW","getWq","getWn","getLn","basicPn","Max","end","elevate","div","LabelSystemOrQueuing","queuing","LabelTypeCalculate","fixed","max","least","MM1","useState","loading","show","showResult","setShowResult","result","setResult","labelPn","setLabelPn","costoServidor","setCostoServidor","costoDiario","setCostoDiario","costoEspera","setCostoEspera","useForm","handleSubmit","errors","formState","setValue","onSubmit","data","parseFloat","toString","parseInt","horas","espera","costoCola","sistema","costoSistema","servidor","model","isStatable","calculateAll","calculate","setLabel","costoServidor_","x","x1","alert","useEffect","operation","viewBox","fill","d","Radio","AtLeast","Queuing","Submit","toFixed","src","Formulas_Pics","alt","MMKModel","pk","pne","getPk","summation","summationForP0","fact","subItem1","subItem2","subItem3","item1","item2","calculatePnWhenNLessK","calculatePnWhenNHigherK","lambdaDivMiu","prod","square","TabPanel","props","children","index","other","role","hidden","aria-labelledby","Box","p","TabsMMK","React","AppBar","position","MMK","isMultichannel","min","Formulas_Picm","MM1MMModel","m","pe","sum","mFact","susFact","MM1MM","FORMULAS_PFCS","MMKMMModel","getPe","summation1","summation1ForP0","summation2","summation2ForP0","summation1ForL","summation2ForL","summation3ForL","MMKMM","FORMULAS_PFCM","ToDo","MainStack","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEYA,E,4LCwHGC,EAtGC,SAAC,GAA+B,EAA7BC,SACjB,OACE,qBAAKC,UAAU,YAAf,SACG,cAACC,EAAA,EAAD,CAAOC,GAAI,CAAEC,MAAO,OAAQC,SAAU,OAAQC,OAAQ,QAAtD,SACa,eAACC,EAAA,EAAD,WACI,eAAC,IAAD,CAAMC,GAAG,IAAIP,UAAU,SAAvB,UACI,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAUC,SAAS,YAEvB,cAACC,EAAA,EAAD,UAAc,cAElB,cAACC,EAAA,EAAD,OAIJ,eAAC,IAAD,CAAML,GAAG,oBAAoBP,UAAU,SAAvC,UACI,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACE,EAAA,EAAD,UAAc,SACd,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,SACI,cAACN,EAAA,EAAD,UACI,cAAC,IAAD,WAKZ,cAACG,EAAA,EAAD,OAIJ,eAAC,IAAD,CAAML,GAAG,oBAAoBP,UAAU,SAAvC,UACI,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACE,EAAA,EAAD,UAAc,SACd,eAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,UACI,cAAC,IAAD,IAAyB,IAAC,cAAC,IAAD,UAIlC,cAACH,EAAA,EAAD,OAGJ,eAAC,IAAD,CAAML,GAAG,wBAAwBP,UAAU,SAA3C,UACI,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,YAExB,cAACC,EAAA,EAAD,UAAc,SACd,cAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,SACI,cAAC,IAAD,SAIR,cAACH,EAAA,EAAD,OAGJ,eAAC,IAAD,CAAML,GAAG,wBAAwBP,UAAU,SAA3C,UACI,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,YAExB,cAACC,EAAA,EAAD,UAAc,SACd,eAACE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,UACI,cAAC,IAAD,IAAyB,IAAC,cAAC,IAAD,UAGlC,cAACH,EAAA,EAAD,OAGJ,eAAC,IAAD,CAAML,GAAG,YAAYP,UAAU,SAA/B,UACI,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACE,EAAA,EAAD,UAAc,gBAElB,cAACC,EAAA,EAAD,OAGJ,cAAC,IAAD,CAAML,GAAG,YAAYP,UAAU,SAA/B,SACI,eAACQ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACE,EAAA,EAAD,UAAc,0B,QCzF/BK,EAVgB,CAC7BC,KAAM,IACNC,OAAQ,UACRC,MAAO,SACPC,MAAO,oBACPC,MAAO,oBACPC,UAAW,wBACXC,UAAW,yBCjBE,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,kC,6CC6H1BC,EA9GE,WACf,OACE,8BACE,qBAAKxB,UAAU,eAAf,SACE,8BACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAAMO,GAAG,IAAT,SACE,cAACkB,EAAA,EAAD,CAEEC,MAAOC,EACPC,MAAM,OACN5B,UAAU,cAId,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAMO,GAAG,oBAAT,SACE,eAACsB,EAAA,EAAD,CAAM3B,GAAI,CAAEE,SAAU,KAAtB,UACE,cAACqB,EAAA,EAAD,CACEvB,GAAI,CAAEG,OAAQ,KACdqB,MAAOI,EACPF,MAAM,SAER,cAACG,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,CAAYmB,cAAY,EAAClB,QAAQ,KAAKmB,UAAU,MAAhD,SAAsD,sCAIxD,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAQC,KAAK,QAAb,SAAqB,aACrB,cAAC,IAAD,CAAQA,KAAK,QAAb,SAAqB,qBAM3B,cAACN,EAAA,EAAD,CAAM3B,GAAI,CAAEE,SAAU,KAAtB,SACE,eAAC,IAAD,CAAMG,GAAG,oBAAT,UACE,cAACkB,EAAA,EAAD,CACEvB,GAAI,CAAEG,OAAQ,KACdqB,MAAOU,EACPR,MAAM,SAER,cAACG,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,CAAYmB,cAAY,EAAClB,QAAQ,KAAKmB,UAAU,MAAhD,SAAsD,0CAIxD,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAQC,KAAK,QAAb,SAAqB,aACrB,cAAC,IAAD,CAAQA,KAAK,QAAb,SAAqB,qBAM3B,cAACN,EAAA,EAAD,CAAM3B,GAAI,CAAEE,SAAU,KAAtB,SACE,eAAC,IAAD,CAAMG,GAAG,wBAAT,UACE,cAACkB,EAAA,EAAD,CACEvB,GAAI,CAAEG,OAAQ,KACdqB,MAAOW,EACPT,MAAM,SAER,cAACG,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,CAAYmB,cAAY,EAAClB,QAAQ,KAAKmB,UAAU,MAAhD,SAAsD,oCAIxD,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAQC,KAAK,QAAb,SAAqB,aACrB,cAAC,IAAD,CAAQA,KAAK,QAAb,SAAqB,qBAO3B,cAACN,EAAA,EAAD,CAAM3B,GAAI,CAAEE,SAAU,KAAtB,SAEE,eAAC,IAAD,CAAMG,GAAG,wBAAT,UACE,cAACkB,EAAA,EAAD,CACEvB,GAAI,CAAEG,OAAQ,KACdqB,MAAOY,EACPV,MAAM,SAER,cAACG,EAAA,EAAD,UACE,cAAClB,EAAA,EAAD,CAAYmB,cAAY,EAAClB,QAAQ,KAAKmB,UAAU,MAAhD,SAAsD,wCAIxD,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAQC,KAAK,QAAb,SAAqB,aACrB,cAAC,IAAD,CAAQA,KAAK,QAAb,SAAqB,kCC7F1BI,EAXF,WACX,OACE,qBACEvC,UAAU,0CACVwC,MAAO,CAAEC,UAAW,WAFtB,SAIE,cAAC,EAAD,OCHSC,EAJM,WACnB,OAAO,8BAAK,wB,gDCWDC,EAAkB,uCAAG,WAAOC,EAAGC,GAAV,SAAAC,EAAA,+EACvBC,IAAcH,EAAGC,IADM,2CAAH,wDCdhB,MAA0B,0CCoB1BG,EAZI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,MACnC,OACE,sBAAKnD,UAAU,+DAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,mBAAGA,UAAU,oBAAb,mBAAqCkD,EAArC,OACA,mBAAGlD,UAAU,OAAb,SAAqBmD,OAEvB,mBAAGnD,UAAU,sBAAb,SAAoCiD,S,SZb9BpD,K,gBAAAA,E,cAAAA,E,iBAAAA,M,KAYZ,IaXYuD,EbuBGC,EAZA,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,KAA4C,IAAtCC,eAAsC,MAA5B,aAA4B,EAClE,OACE,wBACExD,UAAU,wGACVuD,KAAMA,EACNC,QAASA,EAHX,SAKE,mBAAGxD,UAAU,6BAAb,SAA2CsD,O,kBalBrCF,K,YAAAA,E,iBAAAA,M,KAmBZ,ICnBYK,EDqEGC,EAlDD,SAAC,GAYI,IAXjBR,EAWgB,EAXhBA,OACAD,EAUgB,EAVhBA,MACAU,EASgB,EAThBA,YACAC,EAQgB,EARhBA,KACAL,EAOgB,EAPhBA,KACAM,EAMgB,EANhBA,SACAC,EAKgB,EALhBA,MAKgB,IAJhBC,YAIgB,MAJT,GAIS,MAHhBC,iBAGgB,MAHJ,GAGI,MAFhBC,gBAEgB,MAFL,CAAEA,UAAU,GAEP,MADhBC,gBACgB,SAChB,OACE,mCACE,qBAAKlE,UAAWgE,EAAhB,SACE,sBAAKxB,MAAO,CAAE2B,QAAS,QAAvB,UACE,qBAAKnE,UAAU,oBAAf,SACE,wBAAOA,UAAU,+BAA+BoE,QAASR,EAAzD,UACE,mBAAG5D,UAAU,gBAAb,SAA8BiD,IAC7BgB,EAASA,SACR,sBAAMjE,UAAU,wBAAhB,SAAyC,MACvC,UAGR,oBAAGA,UAAU,qBAAb,UAAmCkD,EAAO,SAC1C,mCACElD,UAAS,uDAAkDkE,EAAW,cAAgB,kBAA7E,4DAGTG,GAAIT,EACJM,SAAUA,EACVX,KAAMA,EACNQ,KAAMR,IAASH,EAAWkB,OAASP,EAAO,GAC1CJ,YAAaA,GACTE,EAASD,EAAMK,KAGpBH,GACC,uBAAO9D,UAAU,yFAAjB,SACG8D,EAAMS,mB,SC3DTd,K,cAAAA,E,qBAAAA,M,KAiBZ,ICpBYe,EAKAC,GDyCGC,GA1BK,SAAC,GASI,IARvBzB,EAQsB,EARtBA,MACAW,EAOsB,EAPtBA,KACAL,EAMsB,EANtBA,KACAM,EAKsB,EALtBA,SACAc,EAIsB,EAJtBA,OAIsB,IAHtBX,iBAGsB,MAHV,GAGU,MAFtBC,gBAEsB,MAFX,GAEW,MADtBC,gBACsB,SACtB,OACE,sBAAKlE,UAAS,UAAKgE,EAAL,sBAAd,UACE,mCACEK,GAAIT,EAAOe,EACXT,SAAUA,EACVf,MAAOwB,EACPpB,KAAMA,GACFM,EAASD,EAAMK,KAErB,uBAAOjE,UAAU,0BAA0BoE,QAASR,EAAOe,EAA3D,SACG1B,Q,4BCxCGuB,K,gBAAAA,E,mBAAAA,M,cAKAC,K,cAAAA,E,UAAAA,E,iBAAAA,Q,KCLL,IAEMG,GAAW,SAACC,EAAmBC,GAE1C,OAAOD,EAAYC,GAGRC,GAAQ,SAACC,EAAcC,GAClC,OAAOC,KAAKC,IAAIH,EAAMC,IAGXG,GAAY,SAACC,GAExB,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGA,GAAKF,EAAKE,IAAKD,GAAcC,EAC7C,OAAOD,GCKIE,GAAb,WAkBE,WAAYC,EAAgBC,GAA6B,IAAhBC,EAAe,uDAAH,EAAG,0BAhB/CF,YAgB+C,OAf/CC,SAe+C,OAd/CC,OAc+C,OAZxDC,GAAa,EAY2C,KAXxDC,GAAa,EAW2C,KAVxDC,GAAa,EAU2C,KATxDC,GAAa,EAS2C,KARxDC,EAAY,EAQ4C,KAPxDC,GAAa,EAO2C,KANxDC,EAAY,EAM4C,KALxDC,GAAa,EAK2C,KAJxDC,GAAa,EAKXC,KAAKZ,OAASA,EACdY,KAAKX,IAAMA,EACXW,KAAKV,EAAIA,EArBb,+CAwBE,WACE,OAAOf,GAASyB,KAAKZ,OAAQY,KAAKX,KAAO,IAzB7C,iEA4BE,0CAAA5C,EAAA,sDACEwD,EADF,+BAC4B9B,EAAgB+B,OAC1CC,EAFF,+BAEiC/B,GAAcgC,MAG7CJ,KAAKT,GAAKhB,GAASyB,KAAKZ,OAAQY,KAAKX,KACrCW,KAAKR,GAAKQ,KAAKK,QACfL,KAAKP,GAAKO,KAAKM,MAAML,EAAQE,GAC7BH,KAAKN,GAAKM,KAAKO,QACfP,KAAKL,EAAIK,KAAKQ,OACdR,KAAKH,EAAIG,KAAKS,OACdT,KAAKJ,GAAKI,KAAKU,QACfV,KAAKF,GAAKE,KAAKW,QACfX,KAAKD,GAAKC,KAAKY,QAbjB,iDA5BF,yEA6CE,WAEE,OAAO,EAAIZ,KAAKT,KA/CpB,mBAmDE,SAAcU,EAAyBE,GAErC,GAAIA,IAAkB/B,GAAcgC,MAClC,OAAOJ,KAAKa,QAAQb,KAAKV,GAG3B,GAAIa,IAAkB/B,GAAc0C,IAAK,CACvC,IAAIhE,EAAQ,EACZ,GAAImD,IAAW9B,EAAgB+B,OAC7B,IAAK,IAAIhB,EAAI,EAAGA,GAAKc,KAAKV,EAAGJ,IAC3BpC,GAASkD,KAAKa,QAAQ3B,OAGnB,CACL,IAAI6B,EAAMf,KAAKV,EACfyB,IACA,IAAK,IAAI7B,EAAI,EAAGA,GAAK6B,EAAK7B,IACxBpC,GAASkD,KAAKa,QAAQ3B,GAI1B,OAAOpC,EAGT,GAAImD,IAAW9B,EAAgB+B,OAAQ,CAErC,IADA,IAAIpD,EAAQ,EACHoC,EAAI,EAAGA,EAAIc,KAAKV,EAAGJ,IAC1BpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAO,EAAIpC,EAGX,IADA,IAAIA,EAAQ,EACHoC,EAAI,EAAGA,GAAKc,KAAKV,EAAGJ,IAC3BpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAO,EAAIpC,IAtFjB,qBA0FE,SAAgBkE,GACd,IAAIC,EAAMpC,KAAKC,IAAIkB,KAAKT,GAAIyB,GAC5B,OAAOhB,KAAKR,GAAKyB,IA5FrB,mBAgGE,WACE,IAAIzC,EAAYK,KAAKC,IAAIkB,KAAKZ,OAAQ,GAClCX,EAAcuB,KAAKX,KAAOW,KAAKX,IAAMW,KAAKZ,QAC9C,OAAOb,GAASC,EAAWC,KAnG/B,kBAuGE,WACE,IAAIA,EAAcuB,KAAKX,IAAMW,KAAKZ,OAClC,OAAOb,GAASyB,KAAKZ,OAAQX,KAzGjC,mBA6GE,WACE,IAAIA,EAAcuB,KAAKX,KAAOW,KAAKX,IAAMW,KAAKZ,QAC9C,OAAOb,GAASyB,KAAKZ,OAAQX,KA/GjC,kBAmHE,WACE,IAAIA,EAAcuB,KAAKX,IAAMW,KAAKZ,OAClC,OAAOb,GAAS,EAAGE,KArHvB,mBAyHE,WACE,IAAIA,EAAcuB,KAAKX,IAAMW,KAAKZ,OAClC,OAAOb,GAASyB,KAAKZ,OAAQX,KA3HjC,mBA+HE,WACE,IAAIA,EAAcuB,KAAKX,IAAMW,KAAKZ,OAClC,OAAOb,GAAS,EAAGE,OAjIvB,KCQMyC,GAA4B,CAChCjB,OAAQ,aACRkB,QAAS,WAGLC,GAA0B,CAC9BC,MAAO,cACPC,IAAK,YACLC,MAAO,YA8TMC,GA3TH,WAAO,IAAD,EAEoBC,mBAAS,CAAEC,SAAS,EAAOC,MAAM,IAFrD,mBAETC,EAFS,KAEGC,EAFH,OAGYJ,qBAHZ,mBAGTK,EAHS,KAGDC,EAHC,OAIcN,mBAAiB,IAJ/B,mBAITO,EAJS,KAIAC,EAJA,OAK0BR,mBAAiB,GAL3C,mBAKTS,EALS,KAKMC,EALN,OAMsBV,mBAAiB,GANvC,mBAMTW,EANS,KAMIC,EANJ,OAOsBZ,mBAAiB,GAPvC,mBAOTa,EAPS,KAOIC,EAPJ,OAeZC,cAJFhF,EAXc,EAWdA,SACAiF,EAZc,EAYdA,aACaC,EAbC,EAadC,UAAaD,OACbE,EAdc,EAcdA,SAGIC,EAAkC,uCAAG,WAAOC,GAAP,mCAAArG,EAAA,yDAErC2C,EAAS2D,WAAWD,EAAK1D,OAAO4D,YAChC3D,EAAM0D,WAAWD,EAAKzD,IAAI2D,YAC1B1D,EAAI2D,SAASH,EAAKxD,EAAE0D,YACpBE,EAAQD,SAASH,EAAKI,MAAMF,YAC5BG,EAASF,SAASH,EAAKM,UAAUJ,YACjCK,EAAUJ,SAASH,EAAKQ,aAAaN,YACrCO,EAAWN,SAASH,EAAKZ,cAAcc,cACrCQ,EAAQ,IAAIrE,GAASC,EAAQC,EAAKC,IAE9BmE,aAX+B,wBAYvC5B,EAAc,CAAEH,SAAS,EAAMC,MAAM,IAZE,UAajC6B,EAAME,aAAaZ,EAAK7C,OAAQ6C,EAAKa,WAbJ,eAcvC5B,EAAUyB,GACVI,EAAStE,EAAGwD,EAAKa,UAAWb,EAAK7C,QACjC4B,EAAc,CAAEH,SAAS,EAAOC,MAAM,IAhBC,UAkBFrF,EAAmBiH,EAAU,GAlB3B,QAkBjCM,EAlBiC,OAmBvC1B,EAAiB0B,GAEXC,EAAK1E,EAAS8D,EAAQM,EAAM5D,GAAKuD,EACvCZ,EAAeuB,GACXC,EAAK3E,EAAS8D,EAAQM,EAAM5D,GAAKyD,EACrChB,EAAe0B,GAxBwB,wBA2BvCC,MAAM,gDA3BiC,4CAAH,sDAgCxCC,qBAAU,WACRrB,EAAS,YAAaxE,GAAcgC,OACpCwC,EAAS,SAAUzE,EAAgB+B,UAClC,CAAC0C,IAEJ,IAAMgB,EAAW,SAACtE,EAAWqE,EAAmBO,GAC9CjC,EAAW,gCAAD,OACRb,GAAmBuC,IAAc,cADzB,kBAERrE,EAFQ,wBAES4B,GAAqBgD,IAAc,gBAGxD,OACE,gCACE,qBAAKvK,UAAU,qEAAf,SACE,sBAAKA,UAAU,8FAAf,UACE,sBAAKA,UAAU,uCAAf,UACE,sBAAKA,UAAU,mDAAf,UACE,cAAC,IAAD,CACEO,GAAG,IACHP,UAAU,qDACV4B,MAAM,OAHR,SAKE,qBAAK5B,UAAU,UAAUwK,QAAQ,YAAjC,SACE,sBACEC,KAAK,eACLC,EAAE,+EAIR,oBAAI1K,UAAU,qBAAd,SAAmC,aAGrC,uBAAMkJ,SAAUJ,EAAaI,GAA7B,UACE,cAAC,EAAD,CACEhG,OAAO,SACPD,MAAM,kBACNW,KAAK,SACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOtD,OACd1B,KAAK,QACLE,SAAU,CAAEA,SAAU,6BAExB,cAAC,EAAD,CACEf,OAAO,SACPD,MAAM,mBACNW,KAAK,MACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOrD,IACd1B,UAAU,OACVD,KAAK,QACLE,SAAU,CAAEA,SAAU,6BAExB,qBAAKjE,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,eACPD,MAAM,aACNW,KAAK,IACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAIlB,qBAAK3F,UAAU,OAAf,SACE,sBAAKA,UAAU,SAAf,UACE,8BACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,iBACNW,KAAK,YACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAIlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,oBACNW,KAAK,eACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAGlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,qBACNW,KAAK,gBACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAIlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,SACPD,MAAM,SACNW,KAAK,QACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,WAStB,sBAAK3F,UAAU,YAAf,UACE,4BAAG,gCACH,sBAAKA,UAAU,YAAf,UACE,gCACE,cAAC,GAAD,CACEiD,MAAM,cACNW,KAAK,YACLe,OAAQF,GAAcgC,MACtB5C,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,WACNW,KAAK,YACLe,OAAQF,GAAcmG,QACtB/G,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,YACNW,KAAK,YACLe,OAAQF,GAAc0C,IACtBtD,SAAUA,EACVN,KAAME,EAAiBkH,WAG3B,sBAAK3K,UAAU,OAAf,UACE,cAAC,GAAD,CACEiD,MAAM,UACNW,KAAK,SACLe,OAAQH,EAAgB+B,OACxB1C,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,OACNW,KAAK,SACLe,OAAQH,EAAgBqG,QACxBhH,SAAUA,EACVN,KAAME,EAAiBkH,iBAK/B,qBAAK3K,UAAU,QAAf,SACE,cAAC,EAAD,CAAQsD,KAAK,WAAWC,KAAM1D,EAAWiL,iBAI/C,qBACE9K,UAAS,+EACRiI,EAAWD,KAAuB,WAAhB,eAFrB,SAIGC,EAAWF,QACV,mBAAG/H,UAAU,oBAAb,SAAiC,6BAC9BiI,EAAWD,KAKd,gCACE,qBAAKhI,UAAU,yDAAf,SACE,oBAAIA,UAAU,qBAAd,SAAmC,iBAErC,sBAAKA,UAAU,0CAAf,UACE,gCACE,cAAC,EAAD,CACEkD,OAAO,SACPD,MAAM,4CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQvC,GAAGmF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,6CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQtC,GAAGkF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAOoF,EACPlF,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQrC,GAAGiF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,+CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQpC,GAAGgF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,IACPD,MAAM,kDACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQnC,EAAE+E,QAAQ,KAE3B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,2DACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQ/B,GAAG2E,QAAQ,QAG9B,gCACE,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,iDACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQlC,GAAG8E,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,IACPD,MAAM,6DACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQjC,EAAE6E,QAAQ,KAE3B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,yEACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQhC,GAAG4E,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,MACPD,MAAM,8BACNE,MAAOwF,EAAYoC,QAAQ,KAE7B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,iBACNE,MAAOoF,EAAcwC,QAAQ,KAE/B,cAAC,EAAD,CACE7H,OAAO,MACPD,MAAM,+BACNE,MAAOsF,EAAYsC,QAAQ,cAtEnC,mBAAG/K,UAAU,oBAAb,SAAiC,yCAiFzC,qBAAKA,UAAU,UAAf,SACE,qBAAKgL,IAAKC,EAAeC,IAAI,gBAAgBlL,UAAU,iBCxVlDmL,GAAb,WAwBE,WAAY1F,EAAgBC,EAAa9C,GAA6G,IAAlG+C,EAAiG,uDAArF,EAAG4D,EAAkF,uDAAlE,EAAGC,EAA+D,uDAA9C,EAAGE,EAA2C,uDAAzB,EAAGE,EAAsB,uDAAH,EAAG,0BAtB5InE,YAsB4I,OArB5IC,SAqB4I,OApB5I9C,OAoB4I,OAnB5I+C,OAmB4I,OAlB5I4D,WAkB4I,OAjB5IC,YAiB4I,OAhB5IE,aAgB4I,OAf5IE,cAe4I,OAbrJ/D,GAAa,EAawI,KAZrJuF,GAAa,EAYwI,KAXrJC,IAAc,EAWuI,KATrJvF,GAAa,EASwI,KARrJC,GAAa,EAQwI,KAPrJC,EAAY,EAOyI,KANrJC,GAAa,EAMwI,KALrJC,EAAY,EAKyI,KAJrJC,GAAa,EAIwI,KAHrJC,GAAa,EAIXC,KAAKZ,OAASA,EACdY,KAAKX,IAAMA,EACXW,KAAKzD,EAAIA,EACTyD,KAAKV,EAAIA,EACTU,KAAKkD,MAAQA,EACblD,KAAKmD,OAASA,EACdnD,KAAKqD,QAAUA,EACfrD,KAAKuD,SAAWA,EAhCpB,mDAmCE,WACE,OAAOvD,KAAKzD,EAAI,IApCpB,wBAuCE,WACE,IAAIkC,EAAcuB,KAAKzD,EAAIyD,KAAKX,IAEhC,OADgBd,GAASyB,KAAKZ,OAAQX,GACnB,IA1CvB,iEA6CE,0CAAAhC,EAAA,sDACEwD,EADF,+BAC4B9B,EAAgB+B,OAC1CC,EAFF,+BAEiC/B,GAAcgC,MAE7CJ,KAAKR,GAAKQ,KAAKK,QACfL,KAAK+E,GAAK/E,KAAKiF,QACfjF,KAAKgF,IAAM,EAAIhF,KAAK+E,GACpB/E,KAAKP,GAAKO,KAAKM,MAAML,EAAQE,GAC7BH,KAAKL,EAAIK,KAAKQ,OACdR,KAAKN,GAAKM,KAAKO,QACfP,KAAKD,GAAKC,KAAKY,QACfZ,KAAKH,EAAIG,KAAKS,OACdT,KAAKJ,GAAKI,KAAKU,QACfV,KAAKF,GAAKE,KAAKW,QAbjB,iDA7CF,yEA+DE,WAEE,IAAIuE,EAAYlF,KAAKmF,iBAGjBC,EAAOrG,GAAUiB,KAAKzD,GAEtB8I,EAAW9G,GAAS,EAAG6G,GAGvBnE,EAAM1C,GAASyB,KAAKZ,OAAQY,KAAKX,KACjCiG,EAAW5G,GAAMuC,EAAKjB,KAAKzD,GAG3BiC,EAAYwB,KAAKzD,EAAIyD,KAAKX,IAC1BZ,EAAcuB,KAAKzD,EAAIyD,KAAKX,IAAMW,KAAKZ,OACvCmG,EAAWhH,GAASC,EAAWC,GAInC,OAAOF,GAAS,EAAG2G,EAFPG,EAAWC,EAAWC,KAjFtC,4BAsFE,WAEE,IADA,IAAIzI,EAAQ,EACHoC,EAAI,EAAGA,GAAK+D,SAASjD,KAAKzD,EAAEyG,YAAc,EAAG9D,IAAK,CAEzD,IAAIkG,EAAOrG,GAAUG,GACjBsG,EAAQjH,GAAS,EAAG6G,GAGpBnE,EAAM1C,GAASyB,KAAKZ,OAAQY,KAAKX,KAIrCvC,GADgB0I,EAFJ9G,GAAMuC,EAAK/B,GAKzB,OAAOpC,IApGX,mBAwGE,WAEE,IAAI0I,EAAQjH,GAAS,EAAGQ,GAAUiB,KAAKzD,IAGnCkJ,EAAQ/G,GAAMH,GAASyB,KAAKZ,OAAQY,KAAKX,KAAMW,KAAKzD,GAGpDiC,EAAYwB,KAAKzD,EAAIyD,KAAKX,IAC1BZ,EAAcuB,KAAKzD,EAAIyD,KAAKX,IAAMW,KAAKZ,OAI3C,OAAOoG,EAAQC,EAHHlH,GAASC,EAAWC,GAGDuB,KAAKR,KArHxC,mBAyHE,SAAcS,EAAyBE,GAErC,GAAIF,IAAW9B,EAAgB+B,OAAQ,CAErC,GAAIC,IAAkB/B,GAAcgC,MAClC,OAAOJ,KAAKa,QAAQb,KAAKV,GAI3B,GAAIa,IAAkB/B,GAAc0C,IAAK,CAEvC,IADA,IAAIhE,EAAQ,EACHoC,EAAI,EAAGA,GAAKc,KAAKV,EAAGJ,IAC3BpC,GAASkD,KAAKa,QAAQ3B,GAGxB,OAAOpC,EAIT,GAAIqD,IAAkB/B,GAAcmG,QAAS,CAE3C,IADA,IAAIzH,EAAQ,EACHoC,EAAI,EAAGA,EAAIc,KAAKV,EAAGJ,IAC1BpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAO,EAAIpC,GAIf,GAAImD,IAAW9B,EAAgBqG,QAAS,CAEtC,GAAIrE,IAAkB/B,GAAcgC,MAClC,OAAOJ,KAAKa,QAAQb,KAAKV,EAAIU,KAAKzD,GAIpC,GAAI4D,IAAkB/B,GAAc0C,IAAK,CAGvC,IAFA,IAAIhE,EAAQ,EACRiE,EAAMf,KAAKV,EAAIU,KAAKzD,EACf2C,EAAI,EAAGA,GAAK6B,EAAK7B,IACxBpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAOpC,EAIT,GAAIqD,IAAkB/B,GAAcmG,QAAS,CAE3C,IADA,IAAIzH,EAAQ,EACHoC,EAAI,EAAGA,GAAKc,KAAKV,EAAGJ,IAC3BpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAO,EAAIpC,GAIf,OAAO,IA/KX,qBAkLE,SAAgBwC,GACd,OAAIA,EAAIU,KAAKzD,EACJyD,KAAK0F,sBAAsBpG,GAE3BU,KAAK2F,wBAAwBrG,KAtL1C,mCA0LE,SAA8BA,GAQ5B,OANYf,GAASyB,KAAKR,GAAIT,GAAUO,IAG5BZ,GAAMH,GAASyB,KAAKZ,OAAQY,KAAKX,KAAMC,KA/LvD,qCAqME,SAAgCA,GAE9B,IAAI8F,EAAOrG,GAAUiB,KAAKzD,GACtBuC,EAAMJ,GAAMsB,KAAKzD,EAAG+C,EAAIU,KAAKzD,GAOjC,OANYgC,GAAS,EAAG6G,EAAOtG,GAGnBJ,GAAMH,GAASyB,KAAKZ,OAAQY,KAAKX,KAAMC,GAG5BU,KAAKR,KA/MhC,kBAmNE,WAEE,IAAIoG,EAAerH,GAASyB,KAAKZ,OAAQY,KAAKX,KAG1CP,EAAMJ,GAAMkH,EAAc5F,KAAKzD,GAC/BiC,EAAYwB,KAAKZ,OAASY,KAAKX,IAAMP,EAErCsG,EAAOrG,GAAUiB,KAAKzD,EAAI,GAC1BsJ,EAAO7F,KAAKzD,EAAIyD,KAAKX,IAAMW,KAAKZ,OAChC0G,EAASpH,GAAMmH,EAAM,GASzB,OANetH,GAASC,EAFN4G,EAAOU,GAKF9F,KAAKR,GAGboG,IAtOnB,mBA0OE,WAEE,IAAI9G,EAAMJ,GAAMH,GAASyB,KAAKZ,OAAQY,KAAKX,KAAMW,KAAKzD,GAClDiC,EAAYwB,KAAKZ,OAASY,KAAKX,IAAMP,EAAMkB,KAAKR,GAEhD4F,EAAOrG,GAAUiB,KAAKzD,EAAI,GAC1BsJ,EAAO7F,KAAKzD,EAAIyD,KAAKX,IAAMW,KAAKZ,OAChC0G,EAASpH,GAAMmH,EAAM,GAGzB,OAAOtH,GAASC,EAFE4G,EAAOU,KAlP7B,mBAwPE,WACE,OAAOvH,GAASyB,KAAKN,GAAIM,KAAK+E,MAzPlC,kBA6PE,WAEE,IAAIjG,EAAMJ,GAAMH,GAASyB,KAAKZ,OAAQY,KAAKX,KAAMW,KAAKzD,GAClDiC,EAAYwB,KAAKX,IAAMP,EAAMkB,KAAKR,GAElC4F,EAAOrG,GAAUiB,KAAKzD,EAAI,GAC1BsJ,EAAO7F,KAAKzD,EAAIyD,KAAKX,IAAMW,KAAKZ,OAChC0G,EAASpH,GAAMmH,EAAM,GASzB,OANYtH,GAASC,EAFH4G,EAAOU,GAKbvH,GAAS,EAAGyB,KAAKX,OA1QjC,mBAiRE,WAEE,IAAIP,EAAMJ,GAAMH,GAASyB,KAAKZ,OAAQY,KAAKX,KAAMW,KAAKzD,GAClDiC,EAAYwB,KAAKX,IAAMP,EAAMkB,KAAKR,GAElC4F,EAAOrG,GAAUiB,KAAKzD,EAAI,GAC1BsJ,EAAO7F,KAAKzD,EAAIyD,KAAKX,IAAMW,KAAKZ,OAChC0G,EAASpH,GAAMmH,EAAM,GAGzB,OAAOtH,GAASC,EAFE4G,EAAOU,KAzR7B,mBA+RE,WACE,OAAOvH,GAASyB,KAAKJ,GAAII,KAAK+E,QAhSlC,K,wCCoHA,SAASgB,GAASC,GAAuB,IAC/BC,EAAqCD,EAArCC,SAAUnJ,EAA2BkJ,EAA3BlJ,MAAOoJ,EAAoBF,EAApBE,MAAUC,EADG,aACOH,EADP,8BAGtC,OACE,6CACEI,KAAK,WACLC,OAAQvJ,IAAUoJ,EAClBlI,GAAE,0BAAqBkI,GACvBI,kBAAA,qBAA+BJ,IAC3BC,GALN,aAOGrJ,IAAUoJ,GACT,cAACK,GAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAAC,KAAD,UAAaP,SASRQ,OAlIC,SAAC,GAAuC,IAArC3E,EAAoC,EAApCA,OAAQE,EAA4B,EAA5BA,QAA4B,EAC3B0E,IAAMjF,SAAS,GADY,mBAC9C3E,EAD8C,UASrD,OACE,qCACE,cAAC6J,GAAA,EAAD,CAAQC,SAAS,SAAShI,UAAW,IAGrC,eAACmH,GAAD,CAAUjJ,MAAOA,EAAOoJ,MAAO,EAA/B,UACA,oBAAKvM,UAAU,qBAAf,SAAoC,+DAClC,sBAAKA,UAAU,yCAAf,UACE,gCACE,cAAC,EAAD,CACEkD,OAAO,KACPD,MAAM,6CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQtC,GAAGkF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,6EACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQiD,GAAGL,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,MACPD,MAAM,gEACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQkD,IAAIN,QAAQ,KAE7B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAOoF,EACPlF,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQrC,GAAGiF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,IACPD,MAAM,kDACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQnC,EAAE+E,QAAQ,KAE1B,cAAC,EAAD,CACC7H,OAAO,KACPD,MAAM,+CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQpC,GAAGgF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,2DACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQ/B,GAAG2E,QAAQ,QAG9B,gCAEE,cAAC,EAAD,CACE7H,OAAO,IACPD,MAAM,6DACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQjC,EAAE6E,QAAQ,KAE3B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,iDACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQlC,GAAG8E,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,yEACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQhC,GAAG4E,QAAQ,KAE3B,cAAC,EAAD,CACO7H,OAAO,MACPD,MAAM,8BACNE,OAAQgF,EAAO1C,OAAS0C,EAAOoB,MAAUpB,EAAOlC,GAAKkC,EAAOqB,QAAQuB,QAAQ,KAE9E,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,iBACNE,OAAQgF,EAAOvF,EAAIuF,EAAOyB,UAAUmB,QAAQ,KAE9C,cAAC,EAAD,CACE7H,OAAO,MACPD,MAAM,+BACNE,OAASgF,EAAO1C,OAAS0C,EAAOoB,MAAQpB,EAAOjC,EAAIiC,EAAOuB,SAASqB,QAAQ,kBC/FhF,OAA0B,0CC0BnCxD,GAA4B,CAChCjB,OAAQ,aACRkB,QAAS,WAGLC,GAA0B,CAC9BC,MAAO,cACPC,IAAK,YACLC,MAAO,YAoQMsF,GAjQH,WAAO,IAAD,EACoBpF,mBAAS,CAAEC,SAAS,EAAOC,MAAM,IADrD,mBACTC,EADS,KACGC,EADH,OAEYJ,mBAAmB,IAAIqD,GAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAF9D,mBAEThD,EAFS,KAEDC,EAFC,OAGcN,mBAAiB,IAH/B,mBAGTO,EAHS,KAGAC,EAHA,OAUZO,cAJFhF,EANc,EAMdA,SACAiF,EAPc,EAOdA,aACaC,EARC,EAQdC,UAAaD,OACbE,EATc,EASdA,SAGIC,EAAkC,uCAAG,WAAOC,GAAP,+BAAArG,EAAA,yDAErC2C,EAAS2D,WAAWD,EAAK1D,OAAO4D,YAChC3D,EAAM0D,WAAWD,EAAKzD,IAAI2D,YAC1BzG,EAAI0G,SAASH,EAAKvG,EAAEyG,YACpB1D,EAAI2D,SAASH,EAAKxD,EAAE0D,YACpBE,EAAQD,SAASH,EAAKI,MAAMF,YAC5BG,EAASF,SAASH,EAAKM,UAAUJ,YACjCK,EAAUJ,SAASH,EAAKQ,aAAaN,YACrCO,EAAWN,SAASH,EAAKZ,cAAcc,aAGrCQ,EAAQ,IAAIsB,GAAS1F,EAAQC,EAAK9C,EAAG+C,EAAG4D,EAAOC,EAAQE,EAASE,IAE3DuD,iBAd8B,0CAehC9C,MAAM,oCAf0B,YAiBrCR,EAAMC,aAjB+B,wBAkBvC5B,EAAc,CAAEH,SAAS,EAAMC,MAAM,IAlBE,UAmBjC6B,EAAME,aAAaZ,EAAK7C,OAAQ6C,EAAKa,WAnBJ,QAoBvC5B,EAAUyB,GACVI,EAAStE,EAAGwD,EAAKa,UAAWb,EAAK7C,QACjC4B,EAAc,CAAEH,SAAS,EAAOC,MAAM,IAtBC,wBAyBvCqC,MAAM,gDAzBiC,4CAAH,sDA6BxCC,qBAAU,WACRrB,EAAS,YAAaxE,GAAcgC,OACpCwC,EAAS,SAAUzE,EAAgB+B,UAClC,CAAC0C,IAEJ,IAAMgB,EAAW,SAACtE,EAAWqE,EAAmBO,GAC9CjC,EAAW,gCAAD,OACRb,GAAmBuC,IAAc,cADzB,kBAERrE,EAFQ,wBAES4B,GAAqBgD,IAAc,gBAGxD,OACE,gCACE,qBAAKvK,UAAU,gDAAf,SACE,sBAAKA,UAAU,8FAAf,UACE,sBAAKA,UAAU,sCAAf,UACE,sBAAKA,UAAU,iDAAf,UACE,cAAC,IAAD,CACEO,GAAG,IACHP,UAAU,qDACV4B,MAAM,OAHR,SAKE,qBAAK5B,UAAU,UAAUwK,QAAQ,YAAjC,SACE,sBACEC,KAAK,eACLC,EAAE,+EAIR,oBAAI1K,UAAU,qBAAd,SAAmC,aAGrC,uBAAMkJ,SAAUJ,EAAaI,GAA7B,UACE,cAAC,EAAD,CACEhG,OAAO,SACPD,MAAM,kBACNW,KAAK,SACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOtD,OACd1B,KAAK,QACLE,SAAU,CAAEA,SAAU,6BAExB,cAAC,EAAD,CACEf,OAAO,SACPD,MAAM,mBACNW,KAAK,MACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOrD,IACd1B,UAAU,eACVD,KAAK,QACLE,SAAU,CAAEA,SAAU,6BAGxB,cAAC,EAAD,CACEf,OAAO,IACPD,MAAM,0BACNW,KAAK,IACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOnG,EACdoB,UAAU,OACVC,SAAU,CACRA,SAAU,0BACVmJ,IAAK,CACHjK,MAAO,EACPoB,QAAS,uDAIf,qBAAKvE,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,WACNW,KAAK,IACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAGlB,qBAAK3F,UAAU,OAAf,SACE,sBAAKA,UAAU,SAAf,UACE,8BACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,iBACNW,KAAK,YACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAIlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,oBACNW,KAAK,eACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAGlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,qBACNW,KAAK,gBACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAIlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,SACPD,MAAM,SACNW,KAAK,QACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,WAKtB,sBAAK3F,UAAU,YAAf,UACE,4BAAG,gCACH,sBAAKA,UAAU,YAAf,UACE,gCACE,cAAC,GAAD,CACEiD,MAAM,cACNW,KAAK,YACLe,OAAQF,GAAcgC,MACtB5C,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,WACNW,KAAK,YACLe,OAAQF,GAAcmG,QACtB/G,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,YACNW,KAAK,YACLe,OAAQF,GAAc0C,IACtBtD,SAAUA,EACVN,KAAME,EAAiBkH,WAG3B,sBAAK3K,UAAU,OAAf,UACE,cAAC,GAAD,CACEiD,MAAM,UACNW,KAAK,SACLe,OAAQH,EAAgB+B,OACxB1C,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,OACNW,KAAK,SACLe,OAAQH,EAAgBqG,QACxBhH,SAAUA,EACVN,KAAME,EAAiBkH,iBAM/B,qBAAK3K,UAAU,OAAf,SACE,cAAC,EAAD,CAAQsD,KAAK,WAAWC,KAAM1D,EAAWiL,iBAI/C,qBACE9K,UAAS,+EACRiI,EAAWD,KAAuB,WAAhB,eAFrB,SAIGC,EAAWF,QACV,mBAAG/H,UAAU,oBAAb,SAAiC,6BAC9BiI,EAAWD,KAKd,8BACE,cAAC,GAAD,CAASG,OAAQA,EAAQE,QAASA,MALpC,mBAAGrI,UAAU,oBAAb,SAAiC,qDAiBzC,qBAAKA,UAAU,UAAf,SACE,qBAAKgL,IAAKqC,GAAenC,IAAI,mBAAoBlL,UAAU,kBC7RtDsN,GAAb,WAyBE,WAAY7H,EAAgBC,EAAa6H,GAA8G,IAAnG5H,EAAkG,uDAAtF,EAAI4D,EAAkF,uDAAlE,EAAGC,EAA+D,uDAA9C,EAAGE,EAA2C,uDAAzB,EAAGE,EAAsB,uDAAH,EAAG,0BAvB7InE,YAuB6I,OAtB7IC,SAsB6I,OArB7I6H,OAqB6I,OApB7I5H,OAoB6I,OAnB7I4D,WAmB6I,OAlB7IC,YAkB6I,OAjB7IE,aAiB6I,OAhB7IE,cAgB6I,OAdtJ/D,GAAa,EAcyI,KAbtJ2H,GAAa,EAayI,KAXtJ1H,GAAa,EAWyI,KAVtJC,GAAa,EAUyI,KATtJC,EAAY,EAS0I,KARtJC,GAAa,EAQyI,KAPtJC,EAAY,EAO0I,KANtJC,GAAa,EAMyI,KALtJC,GAAa,EAKyI,KAJtJmC,cAAe,EAIuI,KAHtJoB,aAAc,EAGwI,KAFtJF,UAAW,EAGTpD,KAAKZ,OAASA,EACdY,KAAKX,IAAMA,EACXW,KAAKkH,EAAIA,EACTlH,KAAKV,EAAIA,EACTU,KAAKkD,MAAQA,EACblD,KAAKmD,OAASA,EACdnD,KAAKqD,QAAUA,EACfrD,KAAKuD,SAAWA,EAjCpB,wFAqCE,0CAAA9G,EAAA,sDACEwD,EADF,+BAC4B9B,EAAgB+B,OAC1CC,EAFF,+BAEiC/B,GAAcgC,MAE7CJ,KAAKR,GAAKQ,KAAKK,QACfL,KAAKmH,GAAK,EAAInH,KAAKR,GACnBQ,KAAKP,GAAKO,KAAKM,MAAML,EAAQE,GAC7BH,KAAKL,EAAIK,KAAKQ,OACdR,KAAKN,GAAKM,KAAKO,QACfP,KAAKD,GAAKC,KAAKY,QAEfZ,KAAKJ,GAAKI,KAAKU,QACfV,KAAKH,EAAIG,KAAKS,OACdT,KAAKF,GAAKE,KAAKW,QACfX,KAAKoD,UAAYpD,KAAKZ,OAASY,KAAKkD,MAAQlD,KAAKJ,GAAKI,KAAKmD,OAC3DnD,KAAKkC,cAAiB,EAAIlC,KAAKuD,SAC/BvD,KAAKsD,aAAgBtD,KAAKZ,OAASY,KAAKkD,MAAQlD,KAAKH,EAAIG,KAAKqD,QAhBhE,iDArCF,yEAyDE,WACE,IAAI+D,EAAMpH,KAAKmF,iBACf,OAAO5G,GAAS,EAAG6I,KA3DvB,4BA8DE,WAEE,IADA,IAAItK,EAAQ,EACHwC,EAAI,EAAGA,GAAKU,KAAKkH,EAAG5H,IAAK,CAEhC,IAAI+H,EAAQtI,GAAUiB,KAAKkH,GAEvBI,EAAUvI,GAAUiB,KAAKkH,EAAI5H,GAOjCxC,GALYyB,GAAS8I,EAAOC,GAGhB5I,GAAMH,GAASyB,KAAKZ,OAAQY,KAAKX,KAAMC,GAIrD,OAAOxC,IA7EX,mBAiFE,SAAcmD,EAAyBE,GAErC,GAAIF,IAAW9B,EAAgB+B,OAAQ,CAErC,GAAIC,IAAkB/B,GAAcgC,MAClC,OAAOJ,KAAKa,QAAQb,KAAKV,GAI3B,GAAIa,IAAkB/B,GAAc0C,IAAK,CAEvC,IADA,IAAIhE,EAAQ,EACHoC,EAAI,EAAGA,GAAKc,KAAKV,EAAGJ,IAC3BpC,GAASkD,KAAKa,QAAQ3B,GAGxB,OAAOpC,EAIT,GAAIqD,IAAkB/B,GAAcmG,QAAS,CAE3C,IADA,IAAIzH,EAAQ,EACHoC,EAAI,EAAGA,EAAIc,KAAKV,EAAGJ,IAC1BpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAO,EAAIpC,GAIf,GAAImD,IAAW9B,EAAgBqG,QAAS,CAEtC,GAAIrE,IAAkB/B,GAAcgC,MAClC,OAAOJ,KAAKa,QAAQb,KAAKV,EAAI,GAI/B,GAAIa,IAAkB/B,GAAc0C,IAAK,CAGvC,IAFA,IAAIhE,EAAQ,EACRiE,EAAMf,KAAKV,EAAI,EACVJ,EAAI,EAAGA,GAAK6B,EAAK7B,IACxBpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAOpC,EAIT,GAAIqD,IAAkB/B,GAAcmG,QAAS,CAE3C,IADA,IAAIzH,EAAQ,EACHoC,EAAI,EAAGA,GAAKc,KAAKV,EAAGJ,IAC3BpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAO,EAAIpC,GAGf,OAAO,IAtIX,qBAyIE,SAAgBwC,GAEd,IAAI+H,EAAQtI,GAAUiB,KAAKkH,GAEvBI,EAAUvI,GAAUiB,KAAKkH,EAAI5H,GAQjC,OANYf,GAAS8I,EAAOC,GAGhB5I,GAAMH,GAASyB,KAAKZ,OAAQY,KAAKX,KAAMC,GAG5BU,KAAKR,KArJhC,kBAyJE,WAEE,IAIIiG,EAJMlH,GAASyB,KAAKX,IAAKW,KAAKZ,SAExB,EAAIY,KAAKR,IAInB,OAAOQ,KAAKkH,EAAIzB,IAjKpB,mBAqKE,WAEE,IAIIA,EAJMlH,GAASyB,KAAKZ,OAASY,KAAKX,IAAKW,KAAKZ,SAEtC,EAAIY,KAAKR,IAInB,OAAOQ,KAAKkH,EAAIzB,IA7KpB,mBAiLE,WAEE,OAAOlH,GAASyB,KAAKN,GAAIM,KAAKmH,MAnLlC,mBAuLE,WAEE,IAAI1I,GAAeuB,KAAKkH,EAAIlH,KAAKL,GAAKK,KAAKZ,OAE3C,OAAOb,GAASyB,KAAKN,GAAIjB,KA3L7B,kBA+LE,WAEE,IAAIgH,EAAQlH,GAAS,EAAGyB,KAAKX,KAE7B,OAAOW,KAAKJ,GAAK6F,IAnMrB,mBAuME,WACE,OAAOlH,GAASyB,KAAKJ,GAAII,KAAKmH,QAxMlC,KCHe,OAA0B,0CC2BnCjG,GAA4B,CAChCjB,OAAQ,aACRkB,QAAS,WAGLC,GAA0B,CAC9BC,MAAO,cACPC,IAAK,YACLC,MAAO,YAsTMgG,GAnTD,WAAO,IAAD,EACkB9F,mBAAS,CAAEC,SAAS,EAAOC,MAAM,IADnD,mBACXC,EADW,KACCC,EADD,OAEUJ,qBAFV,mBAEXK,EAFW,KAEHC,EAFG,OAGYN,mBAAiB,IAH7B,mBAGXO,EAHW,KAGFC,EAHE,OAUdO,cAJFhF,EANgB,EAMhBA,SACAiF,EAPgB,EAOhBA,aACaC,EARG,EAQhBC,UAAaD,OACbE,EATgB,EAShBA,SAGIC,EAAoC,uCAAG,WAAOC,GAAP,+BAAArG,EAAA,6DAEvC2C,EAAS2D,WAAWD,EAAK1D,OAAO4D,YAChC3D,EAAM0D,WAAWD,EAAKzD,IAAI2D,YAC1BkE,EAAIjE,SAASH,EAAKoE,EAAElE,YACpB1D,EAAI2D,SAASH,EAAKxD,EAAE0D,YACpBE,EAAQD,SAASH,EAAKI,MAAMF,YAC5BG,EAASF,SAASH,EAAKM,UAAUJ,YACjCK,EAAUJ,SAASH,EAAKQ,aAAaN,YACrCO,EAAWN,SAASH,EAAKZ,cAAcc,YAIrCQ,EAAQ,IAAIyD,GAAW7H,EAAQC,EAAK6H,EAAG5H,EAAG4D,EAAOC,EAAQE,EAASE,GAExE1B,EAAc,CAAEH,SAAS,EAAMC,MAAM,IAfM,UAgBrC6B,EAAME,aAAaZ,EAAK7C,OAAQ6C,EAAKa,WAhBA,QAiB3C5B,EAAUyB,GACVI,EAAStE,EAAGwD,EAAKa,UAAWb,EAAK7C,QACjC4B,EAAc,CAAEH,SAAS,EAAOC,MAAM,IAnBK,4CAAH,sDAsB1CsC,qBAAU,WACRrB,EAAS,YAAaxE,GAAcgC,OACpCwC,EAAS,SAAUzE,EAAgB+B,UAClC,CAAC0C,IAEJ,IAAMgB,EAAW,SAACtE,EAAWqE,EAAmBO,GAC9CjC,EAAW,gCAAD,OACRb,GAAmBuC,IAAc,cADzB,kBAERrE,EAFQ,wBAES4B,GAAqBgD,IAAc,gBAGxD,OACE,gCACA,qBAAKvK,UAAU,qDAAf,SACE,sBAAKA,UAAU,8FAAf,UACE,sBAAKA,UAAU,sCAAf,UACE,sBAAKA,UAAU,iDAAf,UACE,cAAC,IAAD,CACEO,GAAG,IACHP,UAAU,qDACV4B,MAAM,OAHR,SAKE,qBAAK5B,UAAU,UAAUwK,QAAQ,YAAjC,SACE,sBACEC,KAAK,eACLC,EAAE,+EAIR,oBAAI1K,UAAU,qBAAd,SAAmC,iBAGrC,uBAAMkJ,SAAUJ,EAAaI,GAA7B,UAEI,cAAC,EAAD,CACEhG,OAAO,SACPD,MAAM,kBACNW,KAAK,SACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOtD,OACd1B,KAAK,QACLE,SAAU,CAAEA,SAAU,6BAExB,cAAC,EAAD,CACEf,OAAO,SACPD,MAAM,mBACNW,KAAK,MACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOrD,IACd3B,KAAK,QACLE,SAAU,CAAEA,SAAU,6BAE1B,cAAC,EAAD,CACEf,OAAO,IACPD,MAAM,wBACNW,KAAK,IACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOwE,EACdtJ,SAAU,CAAEA,SAAU,2BACtBD,UAAU,SAEZ,qBAAKhE,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,WACNW,KAAK,IACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAGlB,qBAAK3F,UAAU,OAAf,SACE,sBAAKA,UAAU,SAAf,UACE,8BACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,iBACNW,KAAK,YACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAIlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,oBACNW,KAAK,eACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAGlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,qBACNW,KAAK,gBACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAIlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,SACPD,MAAM,SACNW,KAAK,QACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,WAKtB,sBAAK3F,UAAU,YAAf,UACE,4BAAG,gCACH,sBAAKA,UAAU,YAAf,UACE,gCACE,cAAC,GAAD,CACEiD,MAAM,cACNW,KAAK,YACLe,OAAQF,GAAcgC,MACtB5C,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,WACNW,KAAK,YACLe,OAAQF,GAAcmG,QACtB/G,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,YACNW,KAAK,YACLe,OAAQF,GAAc0C,IACtBtD,SAAUA,EACVN,KAAME,EAAiBkH,WAG3B,sBAAK3K,UAAU,OAAf,UACE,cAAC,GAAD,CACEiD,MAAM,UACNW,KAAK,SACLe,OAAQH,EAAgB+B,OACxB1C,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,OACNW,KAAK,SACLe,OAAQH,EAAgBqG,QACxBhH,SAAUA,EACVN,KAAME,EAAiBkH,iBAK/B,qBAAK3K,UAAU,OAAf,SACE,cAAC,EAAD,CAAQsD,KAAK,WAAWC,KAAM1D,EAAWiL,iBAI/C,qBACE9K,UAAS,6EACRiI,EAAWD,KAAuB,WAAhB,eAFrB,SAIGC,EAAWF,QACV,mBAAG/H,UAAU,oBAAb,SAAiC,6BAC9BiI,EAAWD,KAKd,gCACE,qBAAKhI,UAAU,yDAAf,SACE,oBAAIA,UAAU,qBAAd,SAAmC,iBAErC,sBAAKA,UAAU,yCAAf,UACE,gCACE,cAAC,EAAD,CACEkD,OAAO,KACPD,MAAM,6CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQtC,GAAGkF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,4CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQqF,GAAGzC,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAOoF,EACPlF,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQrC,GAAGiF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,IACPD,MAAM,kDACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQnC,EAAE+E,QAAQ,KAE3B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,+CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQpC,GAAGgF,QAAQ,KAG3B,cAAC,EAAD,CACC7H,OAAO,KACPD,MAAM,2DACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQ/B,GAAG2E,QAAQ,QAG9B,gCAEE,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,iDACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQlC,GAAG8E,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,IACPD,MAAM,6DACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQjC,EAAE6E,QAAQ,KAE3B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,yEACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQhC,GAAG4E,QAAQ,KAEtB,cAAC,EAAD,CACJ7H,OAAO,MACPD,MAAM,8BACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQsB,UAAUsB,QAAQ,KAEnC,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,iBACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQI,cAAcwC,QAAQ,KAEvC,cAAC,EAAD,CACE7H,OAAO,MACPD,MAAM,+BACNE,MAAK,OAAGgF,QAAH,IAAGA,OAAH,EAAGA,EAAQwB,aAAaoB,QAAQ,cAxE7C,mBAAG/K,UAAU,oBAAb,SAAiC,qDAkFzC,qBAAKA,UAAU,QAAf,SACE,qBAAMgL,IAAK6C,GAAe3C,IAAI,OAAMlL,UAAU,gBChVvC8N,GAAb,WA4BE,WACErI,EACAC,EACA9C,EACA2K,GAGC,IAFD5H,EAEA,uDAFY,EACZ4D,EACA,uDADgB,EAAGC,EACnB,uDADoC,EAAGE,EACvC,uDADyD,EAAGE,EAC5D,uDAD+E,EAC/E,0BAjCOnE,YAiCP,OAhCOC,SAgCP,OA/BO6H,OA+BP,OA9BO3K,OA8BP,OA7BO+C,OA6BP,OA5BO4D,WA4BP,OA3BOC,YA2BP,OA1BOE,aA0BP,OAzBOE,cAyBP,OAtBF/D,GAAa,EAsBX,KArBF2H,GAAa,EAqBX,KApBFnC,IAAc,EAoBZ,KAlBFvF,GAAa,EAkBX,KAjBFC,GAAa,EAiBX,KAhBFC,EAAY,EAgBV,KAfFC,GAAa,EAeX,KAdFC,EAAY,EAcV,KAbFC,GAAa,EAaX,KAZFC,GAAa,EAYX,KAXFmC,cAAe,EAWb,KAVFoB,aAAc,EAUZ,KATFF,UAAW,EAUTpD,KAAKZ,OAASA,EACdY,KAAKX,IAAMA,EACXW,KAAKzD,EAAIA,EACTyD,KAAKkH,EAAIA,EACTlH,KAAKV,EAAIA,EACTU,KAAKkD,MAAQA,EACblD,KAAKmD,OAASA,EACdnD,KAAKqD,QAAUA,EACfrD,KAAKuD,SAAWA,EA5CpB,mDA+CE,WACE,OAAOvD,KAAKzD,EAAI,IAhDpB,iEAmDE,0CAAAE,EAAA,sDACEwD,EADF,+BAC4B9B,EAAgB+B,OAC1CC,EAFF,+BAEiC/B,GAAcgC,MAE7CJ,KAAKR,GAAKQ,KAAKK,QACfL,KAAKP,GAAKO,KAAKM,MAAML,EAAQE,GAC7BH,KAAKmH,GAAKnH,KAAK0H,QACf1H,KAAKgF,IAAM,EAAIhF,KAAKmH,GACpBnH,KAAKL,EAAIK,KAAKQ,OACdR,KAAKN,GAAKM,KAAKO,QACfP,KAAKD,GAAKC,KAAKY,QACfZ,KAAKJ,GAAKI,KAAKU,QAEfV,KAAKH,EAAIG,KAAKS,OACdT,KAAKF,GAAKE,KAAKW,QAEfX,KAAKoD,UAAYpD,KAAKZ,OAASY,KAAKkD,MAAQlD,KAAKJ,GAAKI,KAAKmD,OAC3DnD,KAAKkC,cAAiBlC,KAAKzD,EAAIyD,KAAKuD,SACpCvD,KAAKsD,aAAgBtD,KAAKZ,OAASY,KAAKkD,MAAQlD,KAAKH,EAAIG,KAAKqD,QAlBhE,iDAnDF,yEAyEE,WAEE,IAAIsE,EAAa3H,KAAK4H,kBAClBC,EAAa7H,KAAK8H,kBAEtB,OAAOvJ,GAAS,EAAGoJ,EAAaE,KA9EpC,6BAiFE,WAEE,IADA,IAAI/K,EAAQ,EACHwC,EAAI,EAAGA,GAAK2D,SAASjD,KAAKzD,EAAEyG,YAAc,EAAG1D,IAAK,CAEzD,IAAI8F,EAAOrG,GAAUiB,KAAKkH,GAEtB7B,EAAWtG,GAAUiB,KAAKkH,EAAI5H,GAE9BgG,EAAWvG,GAAUO,GAIrBkG,EAAQjH,GAAS6G,EAFHC,EAAWC,GAKzBrE,EAAM1C,GAASyB,KAAKZ,OAAQY,KAAKX,KAIrCvC,GADgB0I,EAFJ9G,GAAMuC,EAAK3B,GAKzB,OAAOxC,IAtGX,6BAyGE,WAEE,IADA,IAAIA,EAAQ,EACHwC,EAAIU,KAAKzD,EAAG+C,GAAKU,KAAKkH,EAAG5H,IAAK,CAErC,IAAI8F,EAAOrG,GAAUiB,KAAKkH,GAEtB7B,EAAWtG,GAAUiB,KAAKkH,EAAI5H,GAE9BgG,EAAWvG,GAAUiB,KAAKzD,GAE1BgJ,EAAW7G,GAAMsB,KAAKzD,EAAG+C,EAAIU,KAAKzD,GAIlCiJ,EAAQjH,GAAS6G,EAFHC,EAAWC,EAAWC,GAKpCtE,EAAM1C,GAASyB,KAAKZ,OAAQY,KAAKX,KAIrCvC,GADgB0I,EAFJ9G,GAAMuC,EAAK3B,GAKzB,OAAOxC,IAhIX,mBAoIE,SAAcmD,EAAyBE,GAErC,GAAIF,IAAW9B,EAAgB+B,OAAQ,CAErC,GAAIC,IAAkB/B,GAAcgC,MAClC,OAAOJ,KAAKa,QAAQb,KAAKV,GAI3B,GAAIa,IAAkB/B,GAAc0C,IAAK,CAEvC,IADA,IAAIhE,EAAQ,EACHoC,EAAI,EAAGA,GAAKc,KAAKV,EAAGJ,IAC3BpC,GAASkD,KAAKa,QAAQ3B,GAGxB,OAAOpC,EAIT,GAAIqD,IAAkB/B,GAAcmG,QAAS,CAE3C,IADA,IAAIzH,EAAQ,EACHoC,EAAI,EAAGA,EAAIc,KAAKV,EAAGJ,IAC1BpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAO,EAAIpC,GAIf,GAAImD,IAAW9B,EAAgBqG,QAAS,CAEtC,GAAIrE,IAAkB/B,GAAcgC,MAClC,OAAOJ,KAAKa,QAAQb,KAAKV,EAAIU,KAAKzD,GAIpC,GAAI4D,IAAkB/B,GAAc0C,IAAK,CAGvC,IAFA,IAAIhE,EAAQ,EACRiE,EAAMf,KAAKV,EAAIU,KAAKzD,EACf2C,EAAI,EAAGA,GAAK6B,EAAK7B,IACxBpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAOpC,EAIT,GAAIqD,IAAkB/B,GAAcmG,QAAS,CAE3C,IADA,IAAIzH,EAAQ,EACHoC,EAAI,EAAGA,GAAKc,KAAKV,EAAGJ,IAC3BpC,GAASkD,KAAKa,QAAQ3B,GAExB,OAAO,EAAIpC,GAIf,OAAO,IA1LX,qBA6LE,SAAgBwC,GACd,OAAI,GAAKA,GAAKA,EAAIU,KAAKzD,EACdyD,KAAK0F,sBAAsBpG,GAE3BU,KAAK2F,wBAAwBrG,KAjM1C,mCAqME,SAA8BA,GAE5B,IAAI8F,EAAOrG,GAAUiB,KAAKkH,GAEtB7B,EAAWtG,GAAUiB,KAAKkH,EAAI5H,GAE9BgG,EAAWvG,GAAUO,GAIrBkG,EAAQjH,GAAS6G,EAFHC,EAAWC,GAKzBrE,EAAM1C,GAASyB,KAAKZ,OAAQY,KAAKX,KACjCoG,EAAQ/G,GAAMuC,EAAK3B,GAEvB,OAAOU,KAAKR,GAAKgG,EAAQC,IArN7B,qCAwNE,SAAgCnG,GAE9B,IAAI8F,EAAOrG,GAAUiB,KAAKkH,GAEtB7B,EAAWtG,GAAUiB,KAAKkH,EAAI5H,GAE9BgG,EAAWvG,GAAUiB,KAAKzD,GAE1BgJ,EAAW7G,GAAMsB,KAAKzD,EAAG+C,EAAIU,KAAKzD,GAIlCiJ,EAAQjH,GAAS6G,EAFHC,EAAWC,EAAWC,GAKpCtE,EAAM1C,GAASyB,KAAKZ,OAAQY,KAAKX,KACjCoG,EAAQ/G,GAAMuC,EAAK3B,GAEvB,OAAOU,KAAKR,GAAKgG,EAAQC,IA1O7B,mBA8OE,WAEE,IADA,IAAI3I,EAAQ,EACHwC,EAAIU,KAAKzD,EAAG+C,GAAKU,KAAKkH,EAAG5H,IAChCxC,GAASkD,KAAKa,QAAQvB,GAExB,OAAOxC,IAnPX,kBAuPE,WAIE,OAHWkD,KAAK+H,iBACL/H,KAAKgI,iBACLhI,KAAKiI,mBA1PpB,4BA8PE,WAGE,IAFA,IAAInL,EAAQ,EACRiE,EAAMf,KAAKzD,EAAI,EACV+C,EAAI,EAAGA,GAAKyB,EAAKzB,IAAK,CAG7BxC,GADgBwC,EAAIU,KAAKa,QAAQvB,GAGnC,OAAOxC,IAtQX,4BAyQE,WAEE,IADA,IAAIA,EAAQ,EACHwC,EAAIU,KAAKzD,EAAG+C,GAAKU,KAAKkH,EAAG5H,IAAK,CAOrCxC,IALYwC,EAAIU,KAAKzD,GAETyD,KAAKa,QAAQvB,GAK3B,OAAOxC,IApRX,4BAuRE,WAGE,IAFA,IAAIA,EAAQ,EACRiE,EAAMf,KAAKzD,EAAI,EACV+C,EAAI,EAAGA,GAAKyB,EAAKzB,IACxBxC,GAASkD,KAAKa,QAAQvB,GAGxB,IAAIkG,EAAQ,EAAI1I,EAEhB,OAAOkD,KAAKzD,EAAIiJ,IAhSpB,mBAoSE,WAEE,IADA,IAAI1I,EAAQ,EACHwC,EAAIU,KAAKzD,EAAG+C,GAAKU,KAAKkH,EAAG5H,IAAK,CAOrCxC,IALYwC,EAAIU,KAAKzD,GAETyD,KAAKa,QAAQvB,GAK3B,OAAOxC,IA/SX,mBAmTE,WACE,OAAOyB,GAASyB,KAAKN,GAAIM,KAAKmH,MApTlC,mBAwTE,WAEE,IAAI1I,GAAeuB,KAAKkH,EAAIlH,KAAKL,GAAKK,KAAKZ,OAC3C,OAAOb,GAASyB,KAAKN,GAAIjB,KA3T7B,kBA+TE,WAEE,IAAIgH,EAAQlH,GAAS,EAAGyB,KAAKX,KAE7B,OAAOW,KAAKJ,GAAK6F,IAnUrB,mBAuUE,WACE,OAAOlH,GAASyB,KAAKJ,GAAII,KAAKmH,QAxUlC,KCHe,OAA0B,0CC4BnCjG,GAA4B,CAChCjB,OAAQ,aACRkB,QAAS,WAGLC,GAA0B,CAC9BC,MAAO,cACPC,IAAK,YACLC,MAAO,YAiVM2G,GA9UD,WAAO,IAAD,EACkBzG,mBAAS,CAAEC,SAAS,EAAOC,MAAM,IADnD,mBACXC,EADW,KACCC,EADD,OAEUJ,qBAFV,mBAEXK,EAFW,KAEHC,EAFG,OAGYN,mBAAiB,IAH7B,mBAGXO,EAHW,KAGFC,EAHE,OAUdO,cAJFhF,EANgB,EAMhBA,SACAiF,EAPgB,EAOhBA,aACaC,EARG,EAQhBC,UAAaD,OACbE,EATgB,EAShBA,SAGIC,EAAoC,uCAAG,WAAOC,GAAP,iCAAArG,EAAA,yDAEvC2C,EAAS2D,WAAWD,EAAK1D,OAAO4D,YAChC3D,EAAM0D,WAAWD,EAAKzD,IAAI2D,YAC1BzG,EAAI0G,SAASH,EAAKvG,EAAEyG,YACpBkE,EAAIjE,SAASH,EAAKoE,EAAElE,YACpB1D,EAAI2D,SAASH,EAAKxD,EAAE0D,YACpBE,EAAQD,SAASH,EAAKI,MAAMF,YAC5BG,EAASF,SAASH,EAAKM,UAAUJ,YACjCK,EAAUJ,SAASH,EAAKQ,aAAaN,YACrCO,EAAWN,SAASH,EAAKZ,cAAcc,aAErCQ,EAAQ,IAAIiE,GAAWrI,EAAQC,EAAK9C,EAAG2K,EAAG5H,EAAE4D,EAAOC,EAAQE,EAASE,IAE/DuD,iBAdgC,0CAelC9C,MAAM,wCAf4B,eAiB3CnC,EAAc,CAAEH,SAAS,EAAMC,MAAM,IAjBM,UAkBrC6B,EAAME,aAAaZ,EAAK7C,OAAQ6C,EAAKa,WAlBA,QAmB3C5B,EAAUyB,GACVI,EAAStE,EAAGwD,EAAKa,UAAWb,EAAK7C,QACjC4B,EAAc,CAAEH,SAAS,EAAOC,MAAM,IArBK,4CAAH,sDAwB1CsC,qBAAU,WACRrB,EAAS,YAAaxE,GAAcgC,OACpCwC,EAAS,SAAUzE,EAAgB+B,UAClC,CAAC0C,IAEJ,IAAMgB,EAAW,SAACtE,EAAWqE,EAAmBO,GAC9CjC,EAAW,gCAAD,OACRb,GAAmBuC,IAAc,cADzB,kBAERrE,EAFQ,wBAES4B,GAAqBgD,IAAc,gBAGxD,OACE,gCACA,qBAAKvK,UAAU,qDAAf,SACA,sBAAKA,UAAU,8FAAf,UACE,sBAAKA,UAAU,sCAAf,UACE,sBAAKA,UAAU,iDAAf,UACI,cAAC,IAAD,CACEO,GAAG,IACHP,UAAU,qDACV4B,MAAM,OAHR,SAKE,qBAAK5B,UAAU,UAAUwK,QAAQ,YAAjC,SACE,sBACEC,KAAK,eACLC,EAAE,+EAIR,oBAAI1K,UAAU,qBAAd,SAAmC,iBAGrC,uBAAMkJ,SAAUJ,EAAaI,GAA7B,UAEI,cAAC,EAAD,CACEhG,OAAO,SACPD,MAAM,kBACNW,KAAK,SACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOtD,OACd1B,KAAK,QACLE,SAAU,CAAEA,SAAU,6BAExB,cAAC,EAAD,CACEf,OAAO,SACPD,MAAM,mBACNW,KAAK,MACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOrD,IACd3B,KAAK,QACLE,SAAU,CAAEA,SAAU,6BAIxB,cAAC,EAAD,CACEf,OAAO,IACPD,MAAM,wBACNW,KAAK,IACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOwE,EACdtJ,SAAU,CAAEA,SAAU,2BACtBD,UAAU,SAEZ,cAAC,EAAD,CACEd,OAAO,IACPD,MAAM,0BACNW,KAAK,IACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOnG,EACdoB,UAAU,OACVC,SAAU,CACRA,SAAU,0BACVmJ,IAAK,CACHjK,MAAO,EACPoB,QACE,2DAIV,qBAAKvE,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,WACNW,KAAK,IACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAGlB,qBAAK3F,UAAU,OAAf,SACE,sBAAKA,UAAU,SAAf,UACE,8BACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,iBACNW,KAAK,YACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAIlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,oBACNW,KAAK,eACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAGlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,IACPD,MAAM,qBACNW,KAAK,gBACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,MAIlB,qBAAK3F,UAAU,OAAf,SACE,cAAC,EAAD,CACEkD,OAAO,SACPD,MAAM,SACNW,KAAK,QACLD,YAAY,IACZJ,KAAMH,EAAWkB,OACjBT,SAAUA,EACVC,MAAOiF,EAAOpD,WAKtB,sBAAK3F,UAAU,YAAf,UACE,4BAAG,gCACH,sBAAKA,UAAU,YAAf,UACE,gCACE,cAAC,GAAD,CACEiD,MAAM,cACNW,KAAK,YACLe,OAAQF,GAAcgC,MACtB5C,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,WACNW,KAAK,YACLe,OAAQF,GAAcmG,QACtB/G,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,YACNW,KAAK,YACLe,OAAQF,GAAc0C,IACtBtD,SAAUA,EACVN,KAAME,EAAiBkH,WAG3B,sBAAK3K,UAAU,OAAf,UACE,cAAC,GAAD,CACEiD,MAAM,UACNW,KAAK,SACLe,OAAQH,EAAgB+B,OACxB1C,SAAUA,EACVN,KAAME,EAAiBkH,QAEzB,cAAC,GAAD,CACE1H,MAAM,OACNW,KAAK,SACLe,OAAQH,EAAgBqG,QACxBhH,SAAUA,EACVN,KAAME,EAAiBkH,iBAK/B,qBAAK3K,UAAU,OAAf,SACE,cAAC,EAAD,CAAQsD,KAAK,WAAWC,KAAM1D,EAAWiL,iBAI/C,qBACE9K,UAAS,2EACViI,EAAWD,KAAuB,WAAhB,eAFnB,SAIGC,EAAWF,QACV,mBAAG/H,UAAU,oBAAb,SAAiC,6BAC9BiI,EAAWD,KAKd,gCACE,qBAAKhI,UAAU,iDAAf,SACE,oBAAIA,UAAU,qBAAd,SAAmC,iBAErC,sBAAKA,UAAU,yCAAf,UACE,gCACE,cAAC,EAAD,CACEkD,OAAO,KACPD,MAAM,6CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQtC,GAAGkF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,0DACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQqF,GAAGzC,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,MACPD,MAAM,6BACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQkD,IAAIN,QAAQ,KAE7B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAOoF,EACPlF,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQrC,GAAGiF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,IACPD,MAAM,kDACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQnC,EAAE+E,QAAQ,KAE1B,cAAC,EAAD,CACC7H,OAAO,KACPD,MAAM,+CACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQpC,GAAGgF,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,2DACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQ/B,GAAG2E,QAAQ,QAG9B,gCAEE,cAAC,EAAD,CACE7H,OAAO,IACPD,MAAM,6DACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQjC,EAAE6E,QAAQ,KAE3B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,iDACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQlC,GAAG8E,QAAQ,KAE5B,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,yEACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQhC,GAAG4E,QAAQ,KAEvB,cAAC,EAAD,CACH7H,OAAO,MACPD,MAAM,8BACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQsB,UAAUsB,QAAQ,KAEnC,cAAC,EAAD,CACE7H,OAAO,KACPD,MAAM,iBACNE,MAAK,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAQI,cAAcwC,QAAQ,KAEvC,cAAC,EAAD,CACE7H,OAAO,MACPD,MAAM,+BACNE,MAAK,OAAGgF,QAAH,IAAGA,OAAH,EAAGA,EAAQwB,aAAaoB,QAAQ,cA5E7C,mBAAG/K,UAAU,oBAAb,SAAiC,gDAoFrC,8BAAK,mBAGT,qBAAKA,UAAU,QAAf,SACE,qBAAKgL,IAAKwD,GAAetD,IAAI,OAAQlL,UAAU,gBCtVtCyO,GAvBF,WACX,OACE,qBACEzO,UAAU,0CACVwC,MAAO,CAAEC,UAAW,WAFtB,SAIE,sBAAKzC,UAAU,qFAAf,UACE,oBAAIA,UAAU,sCAAd,SAAoD,uCAGpD,mBAAGA,UAAU,6BAAb,SAA0C,qEAG1C,qBACEA,UAAU,iCACVgL,IAAI,qFACJE,IAAI,kBCUCwD,GAfG,WAChB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAM3N,EAAOC,KAAM2N,OAAK,EAAC3M,UAAWM,IAC3C,cAAC,IAAD,CAAOoM,KAAM3N,EAAOG,MAAOyN,OAAK,EAAC3M,UAAWwM,KAC5C,cAAC,IAAD,CAAOE,KAAM3N,EAAOE,OAAQ0N,OAAK,EAAC3M,UAAWwM,KAC7C,cAAC,IAAD,CAAOE,KAAM3N,EAAOI,MAAOwN,OAAK,EAAC3M,UAAW4F,KAC5C,cAAC,IAAD,CAAO8G,KAAM3N,EAAOK,MAAOuN,OAAK,EAAC3M,UAAWiL,KAC5C,cAAC,IAAD,CAAOyB,KAAM3N,EAAOM,UAAWsN,OAAK,EAAC3M,UAAW2L,KAChD,cAAC,IAAD,CAAOe,KAAM3N,EAAOO,UAAWqN,OAAK,EAAC3M,UAAWsM,KAChD,cAAC,IAAD,CAAOI,KAAK,IAAI1M,UAAWS,QCHlBmM,I,OAbH,WACV,OACE,cAAC,IAAD,UACE,sBAAK7O,UAAU,2BAAf,UACE,cAAC,EAAD,CAASD,SAAU,IACnB,qBAAKC,UAAU,iCAAf,SACE,cAAC,GAAD,aCCK8O,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4261f2fc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport enum ButtonType {\r\n  Button = 'button',\r\n  Reset = 'reset',\r\n  Submit = 'submit',\r\n}\r\n\r\ninterface ButtonProps {\r\n  text: string;\r\n  type: ButtonType;\r\n  onClick?(): any;\r\n}\r\n\r\nconst Button = ({ text, type, onClick = () => {} }: ButtonProps) => {\r\n  return (\r\n    <button\r\n      className=\"bg-green-400 hover:bg-green-900 text-black rounded shadow text-center uppercase font-bold w-full h-14\"\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      <p className=\"w-full flex justify-center\">{text}</p>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport '../../styles/Head.css'\r\nimport { Link } from 'react-router-dom';\r\nimport Divider from '@mui/material/Divider';\r\nimport Paper from '@mui/material/Paper';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport Typography from '@mui/material/Typography';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport ComputerIcon from '@mui/icons-material/Computer';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { BsInfinity, BsPcDisplayHorizontal, BsFillFileRuledFill, BsFileDiff } from \"react-icons/bs\";\r\n\r\n\r\ninterface propsToolbar {\r\n  heightVh: number;\r\n}\r\n\r\nconst Toolbar = ({ heightVh }: propsToolbar) => {\r\n  return (\r\n    <div className='main-menu'>\r\n       <Paper sx={{ width: '100%', maxWidth: '100%', height: '100%' }}>\r\n                    <MenuList>\r\n                        <Link to='/' className='titles'>\r\n                            <MenuItem >\r\n                                <ListItemIcon>\r\n                                    <HomeIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText>Inicio</ListItemText>\r\n                            </MenuItem>\r\n                            <Divider />\r\n                        </Link>\r\n\r\n\r\n                        <Link to='/calculator/m_m_1' className='titles'>\r\n                            <MenuItem>\r\n                                <ListItemIcon>\r\n                                    <BsInfinity />\r\n                                </ListItemIcon>\r\n                                <ListItemText>PICS</ListItemText>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    <ListItemIcon>\r\n                                        <ComputerIcon />\r\n                                    </ListItemIcon>\r\n                                </Typography>\r\n                            </MenuItem>\r\n\r\n                            <Divider />\r\n                        </Link>\r\n\r\n\r\n                        <Link to='/calculator/m_m_k' className='titles'>\r\n                            <MenuItem>\r\n                                <ListItemIcon>\r\n                                    <BsInfinity />\r\n                                </ListItemIcon>\r\n                                <ListItemText>PICM</ListItemText>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    <BsPcDisplayHorizontal /> <BsPcDisplayHorizontal />\r\n                                </Typography>\r\n                            </MenuItem>\r\n\r\n                            <Divider />\r\n                        </Link>\r\n\r\n                        <Link to='/calculator/m_m_1_m_m' className='titles'>\r\n                            <MenuItem>\r\n                                <ListItemIcon>\r\n                                    <GroupIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText>PFCS</ListItemText>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    <ComputerIcon />\r\n                                </Typography>\r\n                            </MenuItem>\r\n\r\n                            <Divider />\r\n                        </Link>\r\n\r\n                        <Link to='/calculator/m_m_k_m_m' className='titles'>\r\n                            <MenuItem>\r\n                                <ListItemIcon>\r\n                                    <GroupIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText>PFCM</ListItemText>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    <BsPcDisplayHorizontal /> <BsPcDisplayHorizontal />\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            <Divider />\r\n                        </Link>\r\n\r\n                        <Link to='/FORMULAS' className='titles'>\r\n                            <MenuItem>\r\n                                <ListItemIcon>\r\n                                    <BsFillFileRuledFill />\r\n                                </ListItemIcon>\r\n                                <ListItemText>Formulas</ListItemText>\r\n                            </MenuItem>\r\n                            <Divider />\r\n                        </Link>\r\n\r\n                        <Link to='/EJEMPLOS' className='titles'>\r\n                            <MenuItem>\r\n                                <ListItemIcon>\r\n                                    <BsFileDiff />\r\n                                </ListItemIcon>\r\n                                <ListItemText>Ejemplos</ListItemText>\r\n                            </MenuItem>\r\n                        </Link>\r\n\r\n\r\n                    </MenuList>\r\n                </Paper>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default Toolbar;\r\n","interface RouteInterface {\r\n  home: string;\r\n  theory: string;\r\n  about: string;\r\n  m_m_1: string;\r\n  m_m_k: string;\r\n  m_m_1_m_m: string;\r\n  m_m_k_m_m: string;\r\n}\r\n\r\nconst Routes: RouteInterface = {\r\n  home: '/',\r\n  theory: '/theory',\r\n  about: '/about',\r\n  m_m_1: '/calculator/m_m_1',\r\n  m_m_k: '/calculator/m_m_k',\r\n  m_m_1_m_m: '/calculator/m_m_1_m_m',\r\n  m_m_k_m_m: '/calculator/m_m_k_m_m',\r\n};\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/PICS.812f53b9.png\";","export default __webpack_public_path__ + \"static/media/PICM.165b04b0.png\";","export default __webpack_public_path__ + \"static/media/PFCS.0e456a90.png\";","export default __webpack_public_path__ + \"static/media/COLAS.2f9adea8.jpg\";","import { Link } from 'react-router-dom';\r\nimport '../../index.css'\r\n\r\nimport PICS from '../../assets/PICS.png'\r\nimport PICM from '../../assets/PICM.png'\r\nimport PFCM from '../../assets/PICM.png'\r\nimport PFCS from '../../assets/PFCS.png'\r\nimport COLAS from '../../assets/COLAS.jpg'\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst HomeMenu = () => {\r\n  return (\r\n    <div>\r\n      <div className='contenedores'>\r\n        <div >\r\n          <div className='cardsP'>\r\n            <Link to='/'>\r\n              <CardMedia\r\n\r\n                image={COLAS}\r\n                title=\"PICM\"\r\n                className='portada'\r\n              />\r\n            </Link>\r\n\r\n            <div className='grids'>\r\n              <Link to='/calculator/m_m_1'>\r\n                <Card sx={{ maxWidth: 245 }}>\r\n                  <CardMedia\r\n                    sx={{ height: 140 }}\r\n                    image={PICS}\r\n                    title=\"PICS\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                      Poblacion Infinita - 1 Servidor\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\">Calcular</Button>\r\n                    <Button size=\"small\">Ejemplos</Button>\r\n                  </CardActions>\r\n                </Card>\r\n\r\n              </Link>\r\n\r\n              <Card sx={{ maxWidth: 245 }}>\r\n                <Link to='/calculator/m_m_k'>\r\n                  <CardMedia\r\n                    sx={{ height: 140 }}\r\n                    image={PICM}\r\n                    title=\"PICM\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                      Poblacion Infinita - K Servidorores\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\">Calcular</Button>\r\n                    <Button size=\"small\">Ejemplos</Button>\r\n                  </CardActions>\r\n                </Link>\r\n\r\n              </Card>\r\n\r\n              <Card sx={{ maxWidth: 245 }}>\r\n                <Link to='/calculator/m_m_1_m_m'>\r\n                  <CardMedia\r\n                    sx={{ height: 140 }}\r\n                    image={PFCS}\r\n                    title=\"PFCS\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                      Poblacion Finita - 1 Servidor\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\">Calcular</Button>\r\n                    <Button size=\"small\">Ejemplos</Button>\r\n                  </CardActions>\r\n                </Link>\r\n\r\n              </Card>\r\n\r\n\r\n              <Card sx={{ maxWidth: 245 }}>\r\n\r\n                <Link to='/calculator/m_m_k_m_m'>\r\n                  <CardMedia\r\n                    sx={{ height: 140 }}\r\n                    image={PFCM}\r\n                    title=\"PFCM\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                      Poblacion Finita - K Servidorores\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\">Calcular</Button>\r\n                    <Button size=\"small\">Ejemplos</Button>\r\n                  </CardActions>\r\n                </Link>\r\n                \r\n              </Card>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default HomeMenu;\r\n","import React from 'react';\r\nimport HomeMenu from '../components/menu/HomeMenu';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div\r\n      className=\"h-full flex justify-center items-center\"\r\n      style={{ minHeight: 'inherit' }}\r\n    >\r\n      <HomeMenu />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage = () => {\r\n  return <div>page not found 404</div>;\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import * as math from \"mathjs\";\r\n\r\nexport const costoEsperaTotal =  (lamda, horas, Wq, costo) => {\r\n    \r\n    // let costoDiario = math.multiply( lamda , horas ,Wq, costo).valueOf();\r\n    return math.multiply( lamda , horas ,Wq, costo);\r\n}\r\n\r\n\r\nexport const costoFuncionamiento = async (lamda, horas, W, costo) => {\r\n   \r\n    return math.multiply(lamda, horas, W, costo).valueOf();\r\n  };\r\n  \r\nexport const costoServidorTotal = async (k, costo) => {\r\n    return math.multiply(k, costo);\r\n}","export default __webpack_public_path__ + \"static/media/FORMULAS_PICS.891e63e7.jpg\";","import React from 'react';\r\n\r\ninterface ResultItemProps {\r\n  symbol: string;\r\n  label: string;\r\n  value: number | any;\r\n}\r\n\r\nconst ResultItem = ({ label, symbol, value }: ResultItemProps) => {\r\n  return (\r\n    <div className=\"flex bg-gray-100 mt-2 flex-col items-center py-4 px-1 border\">\r\n      <div className=\"flex items-center \">\r\n        <p className=\"text-xl font-bold\">{`${symbol}:`}</p>\r\n        <p className=\"ml-2\">{value}</p>\r\n      </div>\r\n      <p className=\"text-center text-xs\">{label}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultItem;\r\n","import React from 'react';\r\nimport { UseFormRegister } from 'react-hook-form';\r\n\r\nexport enum InputTypes {\r\n  Text = 'text',\r\n  Number = 'number',\r\n}\r\n\r\ninterface InputProps {\r\n  symbol: string;\r\n  label: string;\r\n  placeholder: string;\r\n  name: string;\r\n  type: InputTypes;\r\n  register: UseFormRegister<any>;\r\n  error: any;\r\n  step?: string;\r\n  container?: string; // optional\r\n  required?: any; // optional\r\n  disabled?: boolean; // optional\r\n}\r\n\r\nconst Input = ({\r\n  symbol,\r\n  label,\r\n  placeholder,\r\n  name,\r\n  type,\r\n  register,\r\n  error,\r\n  step = '',\r\n  container = '',\r\n  required = { required: false },\r\n  disabled = false,\r\n}: InputProps) => {\r\n  return (\r\n    <>\r\n      <div className={container}>\r\n        <div style={{ display: 'flex' }}>\r\n          <div className='w-2/6 justify-end'>\r\n            <label className=\"ml-2 flex tracking-wide mb-2\" htmlFor={name}>\r\n              <p className=\"ml-2 self-end\">{label}</p>\r\n              {required.required ? (\r\n                <span className=\"text-red-500 self-end\">{'*'}</span>\r\n              ) : null}\r\n            </label>\r\n          </div>\r\n          <p className=\"text-2xl font-bold\">{symbol} = </p>\r\n          <input\r\n            className={`text-black appearance-none block w-2/6 h-1/6 ${disabled ? 'bg-gray-300' : 'bg-grey-lighter'\r\n              }\r\n          border border-grey-lighter rounded py-3 px-4`}\r\n            id={name}\r\n            disabled={disabled}\r\n            type={type}\r\n            step={type === InputTypes.Number ? step : ''}\r\n            placeholder={placeholder}\r\n            {...register(name, required)}\r\n          />      \r\n\r\n          {error && (\r\n            <small className=\"mt-2 ml-2 block tracking-wide text-grey-darker text-red-500 text-xs font-semibold mb-1\">\r\n              {error.message}\r\n            </small>\r\n          )}\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { UseFormRegister } from 'react-hook-form';\r\n\r\nexport enum OptionInputTypes {\r\n  Radio = 'radio',\r\n  Checkbox = 'checkbox',\r\n}\r\n\r\ninterface OptionInputProps {\r\n  label: string;\r\n  name: string;\r\n  option: string;\r\n  type: OptionInputTypes;\r\n  register: UseFormRegister<any>;\r\n  error?: any;\r\n  container?: string; // optional\r\n  required?: any; // optional\r\n  disabled?: boolean; // optional\r\n}\r\n\r\nconst OptionInput = ({\r\n  label,\r\n  name,\r\n  type,\r\n  register,\r\n  option,\r\n  container = '',\r\n  required = {},\r\n  disabled = false,\r\n}: OptionInputProps) => {\r\n  return (\r\n    <div className={`${container} flex items-center`}>\r\n      <input\r\n        id={name + option}\r\n        disabled={disabled}\r\n        value={option}\r\n        type={type}\r\n        {...register(name, required)}\r\n      />\r\n      <label className=\"ml-2 flex tracking-wide\" htmlFor={name + option}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionInput;\r\n","export enum SystemOrQueuing {\r\n  System = 'system',\r\n  Queuing = 'queuing',\r\n}\r\n\r\nexport enum TypeCalculate {\r\n  Fixed = 'fixed',\r\n  Max = 'max',\r\n  AtLeast = 'least',\r\n}\r\n","export const PRECISION = 6;\r\n\r\nexport const Division = (numerator: number, denominator: number) => {\r\n  // return parseFloat((numerator / denominator).toPrecision(PRECISION));\r\n  return numerator / denominator;\r\n};\r\n\r\nexport const Power = (base: number, elevation: number): number => {\r\n  return Math.pow(base, elevation);\r\n};\r\n\r\nexport const Factorial = (num: number) => {\r\n  var rval = 1;\r\n  for (var i = 2; i <= num; i++) rval = rval * i;\r\n  return rval;\r\n};\r\n","import { TypeCalculate, SystemOrQueuing } from '../Constants';\r\nimport { Division } from '../../../utils/MathUtils';\r\n\r\nexport interface MM1Type {\r\n  lambda: number;\r\n  miu: number;\r\n  n: number;\r\n  // results\r\n  ro: number;\r\n  p0: number;\r\n  pn: number;\r\n  lq: number;\r\n  l: number;\r\n  wq: number;\r\n  w: number;\r\n  wn: number;\r\n  ln: number;\r\n}\r\n\r\nexport class MM1Model {\r\n  // basic values\r\n  readonly lambda: number;\r\n  readonly miu: number;\r\n  readonly n: number;\r\n  // results\r\n  ro: number = 0;\r\n  p0: number = 0;\r\n  pn: number = 0;\r\n  lq: number = 0;\r\n  l: number = 0;\r\n  wq: number = 0;\r\n  w: number = 0;\r\n  wn: number = 0;\r\n  ln: number = 0;\r\n\r\n  // constructor() {}\r\n\r\n  constructor(lambda: number, miu: number, n: number = 0) {\r\n    this.lambda = lambda;\r\n    this.miu = miu;\r\n    this.n = n;\r\n  }\r\n\r\n  isStatable(): boolean {\r\n    return Division(this.lambda, this.miu) < 1;\r\n  }\r\n\r\n  async calculateAll(\r\n    system: SystemOrQueuing = SystemOrQueuing.System,\r\n    typeCalculate: TypeCalculate = TypeCalculate.Fixed,\r\n  ): Promise<void> {\r\n    // The probability of finding the busy system or system utilization (ρ)\r\n    this.ro = Division(this.lambda, this.miu);\r\n    this.p0 = this.getP0();\r\n    this.pn = this.getPn(system, typeCalculate);\r\n    this.lq = this.getLq();\r\n    this.l = this.getL();\r\n    this.w = this.getW();\r\n    this.wq = this.getWq();\r\n    this.wn = this.getWn();\r\n    this.ln = this.getLn();\r\n  }\r\n\r\n  // The probability P0 of finding the empty or idle system\r\n  private getP0(): number {\r\n    // return parseFloat((1 - this.ro).toPrecision(PRECISION));\r\n    return 1 - this.ro;\r\n  }\r\n\r\n  // The probability Pn of finding exactly n customers in the system\r\n  private getPn(system: SystemOrQueuing, typeCalculate: TypeCalculate): number {\r\n    // fixed\r\n    if (typeCalculate === TypeCalculate.Fixed) {\r\n      return this.basicPn(this.n);\r\n    }\r\n    // max\r\n    if (typeCalculate === TypeCalculate.Max) {\r\n      let value = 0;\r\n      if (system === SystemOrQueuing.System) {\r\n        for (let i = 0; i <= this.n; i++) {\r\n          value += this.basicPn(i);\r\n          // console.log('MAX SYSTEM', value, i);\r\n        }\r\n      } else {\r\n        let end = this.n;\r\n        end++;\r\n        for (let i = 0; i <= end; i++) {\r\n          value += this.basicPn(i);\r\n          // console.log('MAX QUEUING', value, i);\r\n        }\r\n      }\r\n      return value;\r\n    }\r\n    // at least with system or queuing\r\n    if (system === SystemOrQueuing.System) {\r\n      let value = 0;\r\n      for (let i = 0; i < this.n; i++) {\r\n        value += this.basicPn(i);\r\n      }\r\n      return 1 - value;\r\n    } else {\r\n      let value = 0;\r\n      for (let i = 0; i <= this.n; i++) {\r\n        value += this.basicPn(i);\r\n      }\r\n      return 1 - value;\r\n    }\r\n  }\r\n\r\n  private basicPn(elevate: number): number {\r\n    let div = Math.pow(this.ro, elevate);\r\n    return this.p0 * div;\r\n  }\r\n\r\n  // The expected number Lq of clients in the queue\r\n  private getLq(): number {\r\n    let numerator = Math.pow(this.lambda, 2);\r\n    let denominator = this.miu * (this.miu - this.lambda);\r\n    return Division(numerator, denominator);\r\n  }\r\n\r\n  // The expected number L of clients in the system\r\n  private getL(): number {\r\n    let denominator = this.miu - this.lambda;\r\n    return Division(this.lambda, denominator);\r\n  }\r\n\r\n  // The expected time Wq in the queue by the clients\r\n  private getWq(): number {\r\n    let denominator = this.miu * (this.miu - this.lambda);\r\n    return Division(this.lambda, denominator);\r\n  }\r\n\r\n  // The expected average time W in the system by the clients\r\n  private getW(): number {\r\n    let denominator = this.miu - this.lambda;\r\n    return Division(1, denominator);\r\n  }\r\n\r\n  // The expected number Ln of clients in the non-empty queue\r\n  private getLn(): number {\r\n    let denominator = this.miu - this.lambda;\r\n    return Division(this.lambda, denominator);\r\n  }\r\n\r\n  // The expected time Wn in the queue for queues not empty by clients\r\n  private getWn(): number {\r\n    let denominator = this.miu - this.lambda;\r\n    return Division(1, denominator);\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport { costoServidorTotal } from '../library/queueing/cost/PICS.js'\r\nimport Formulas_Pics from '../assets/FORMULAS_PICS.jpg';\r\n\r\nimport ResultItem from '../components/results/ResultItem';\r\nimport Button, { ButtonType } from '../components/buttons/Button';\r\nimport Input, { InputTypes } from '../components/inputs/Input';\r\nimport OptionInput, {\r\n  OptionInputTypes,\r\n} from '../components/inputs/OptionInput';\r\nimport { MM1Model } from '../library/queueing/formulas/MM1.model';\r\nimport { SystemOrQueuing, TypeCalculate } from '../library/queueing/Constants';\r\n\r\ntype MM1Values = {\r\n  lambda: number;\r\n  miu: number;\r\n  n: number;\r\n  horas: number;\r\n  costoCola: number,\r\n  costoSistema: number;\r\n  costoServidor: number,\r\n  calculate: TypeCalculate;\r\n  system: SystemOrQueuing;\r\n};\r\n\r\nconst LabelSystemOrQueuing: any = {\r\n  system: 'el sistema',\r\n  queuing: 'la cola',\r\n};\r\n\r\nconst LabelTypeCalculate: any = {\r\n  fixed: 'exactamente',\r\n  max: 'máximo',\r\n  least: 'al menos',\r\n};\r\n\r\nconst MM1 = () => {\r\n\r\n  const [showResult, setShowResult] = useState({ loading: false, show: false });\r\n  const [result, setResult] = useState<MM1Model>();\r\n  const [labelPn, setLabelPn] = useState<string>('');\r\n  const [costoServidor, setCostoServidor] = useState<number>(0);\r\n  const [costoDiario, setCostoDiario] = useState<number>(0);\r\n  const [costoEspera, setCostoEspera] = useState<number>(0);\r\n\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm<MM1Values>();\r\n\r\n  const onSubmit: SubmitHandler<MM1Values> = async (data) => {\r\n    // parse data for avoid problems\r\n    let lambda = parseFloat(data.lambda.toString());\r\n    let miu = parseFloat(data.miu.toString());\r\n    let n = parseInt(data.n.toString());\r\n    let horas = parseInt(data.horas.toString());\r\n    let espera = parseInt(data.costoCola.toString());\r\n    let sistema = parseInt(data.costoSistema.toString());\r\n    let servidor = parseInt(data.costoServidor.toString());\r\n    const model = new MM1Model(lambda, miu, n);\r\n\r\n    if (model.isStatable()) {\r\n      setShowResult({ loading: true, show: false });\r\n      await model.calculateAll(data.system, data.calculate);\r\n      setResult(model);\r\n      setLabel(n, data.calculate, data.system);\r\n      setShowResult({ loading: false, show: true });\r\n\r\n      const costoServidor_: number = await costoServidorTotal(servidor, 1);\r\n      setCostoServidor(costoServidor_);\r\n\r\n      const x = (lambda * horas * model.wq * espera);\r\n      setCostoEspera(x);\r\n      let x1 = lambda * horas * model.wq * sistema;\r\n      setCostoDiario(x1);\r\n\r\n    } else {\r\n      alert('no cumple con la condición de estabilidad');\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setValue('calculate', TypeCalculate.Fixed);\r\n    setValue('system', SystemOrQueuing.System);\r\n  }, [setValue]);\r\n\r\n  const setLabel = (n: number, calculate: string, operation: string) => {\r\n    setLabelPn(`Probabilidad de hallar \r\n    ${LabelTypeCalculate[calculate] || 'exactamente'} \r\n    ${n} clientes en ${LabelSystemOrQueuing[operation] || 'el sistema'}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex ml-32 justify-end h-auto min-w-full max-w-max lg:items-center\">\r\n        <div className=\"flex flex-col rounded-xl w-full shadow-md overflow-hidden sm:w-11/12 lg:flex-row lg:w-11/12\">\r\n          <div className=\"bg-gray-300 px-6 pt-4 border  w-auto\">\r\n            <div className=\"  relative flex my-3 justify-center items-center\">\r\n              <Link\r\n                to=\"/\"\r\n                className=\"absolute left-0 hover:bg-gray-200 rounded-full p-2\"\r\n                title=\"back\"\r\n              >\r\n                <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\"\r\n                  />\r\n                </svg>\r\n              </Link>\r\n              <h2 className=\"font-bold text-2xl\">M/M/1</h2>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <Input\r\n                symbol=\"λ\"\r\n                label=\"Tasa de llegada\"\r\n                name=\"lambda\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.lambda}\r\n                step='0.001'\r\n                required={{ required: 'El campo es obligatorio' }}\r\n              />\r\n              <Input\r\n                symbol=\"μ\"\r\n                label=\"Tasa de servicio\"\r\n                name=\"miu\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.miu}\r\n                container=\"mt-2\"\r\n                step='0.001'\r\n                required={{ required: 'El campo es obligatorio' }}\r\n              />\r\n              <div className=\"mt-1\">\r\n                <Input\r\n                  symbol=\"𝒏\"\r\n                  label=\"N clientes\"\r\n                  name=\"n\"\r\n                  placeholder=\"0\"\r\n                  type={InputTypes.Number}\r\n                  register={register}\r\n                  error={errors.n}\r\n                />\r\n              </div>\r\n              {/* =============================00COSTOS ============================= */}\r\n              <div className=\"mt-1\">\r\n                <div className='costos'>\r\n                  <div>\r\n                    <Input\r\n                      symbol=\"$\"\r\n                      label=\"Costo por Cola\"\r\n                      name=\"costoCola\"\r\n                      placeholder=\"0\"\r\n                      type={InputTypes.Number}\r\n                      register={register}\r\n                      error={errors.n}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mt-1\">\r\n                    <Input\r\n                      symbol=\"$\"\r\n                      label=\"Costo por Sistema\"\r\n                      name=\"costoSistema\"\r\n                      placeholder=\"0\"\r\n                      type={InputTypes.Number}\r\n                      register={register}\r\n                      error={errors.n}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <Input\r\n                      symbol=\"$\"\r\n                      label=\"Costo por servidor\"\r\n                      name=\"costoServidor\"\r\n                      placeholder=\"0\"\r\n                      type={InputTypes.Number}\r\n                      register={register}\r\n                      error={errors.n}\r\n                    />\r\n\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <Input\r\n                      symbol=\"⏳\"\r\n                      label=\"Horas \"\r\n                      name=\"horas\"\r\n                      placeholder=\"0\"\r\n                      type={InputTypes.Number}\r\n                      register={register}\r\n                      error={errors.n}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n              </div>\r\n\r\n              <div className=\"ml-2 mt-1\">\r\n                <p>Opciones para calculo de Pn</p>\r\n                <div className=\"flex mt-1\">\r\n                  <div>\r\n                    <OptionInput\r\n                      label=\"Exactamente\"\r\n                      name=\"calculate\"\r\n                      option={TypeCalculate.Fixed}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n                    <OptionInput\r\n                      label=\"Al menos\"\r\n                      name=\"calculate\"\r\n                      option={TypeCalculate.AtLeast}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n                    <OptionInput\r\n                      label=\"Máximo\"\r\n                      name=\"calculate\"\r\n                      option={TypeCalculate.Max}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <OptionInput\r\n                      label=\"Sistema\"\r\n                      name=\"system\"\r\n                      option={SystemOrQueuing.System}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n                    <OptionInput\r\n                      label=\"Cola\"\r\n                      name=\"system\"\r\n                      option={SystemOrQueuing.Queuing}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"my-5 \">\r\n                <Button text=\"Calcular\" type={ButtonType.Submit} />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div\r\n            className={`w-auto lg:min-h-full flex justify-center border px-6 pt-4\r\n          ${!showResult.show ? 'bg-gray-200' : 'bg-white'}`}\r\n          >\r\n            {showResult.loading ? (\r\n              <p className=\"self-center my-36\">Calculando resultados...</p>\r\n            ) : !showResult.show ? (\r\n              <p className=\"self-center my-36\">\r\n                Sin RESULTADOS POR EL MOMENTO\r\n              </p>\r\n            ) : (\r\n              <div>\r\n                <div className=\"relative flex my-2  w-auto justify-center items-center\">\r\n                  <h2 className=\"font-bold text-2xl\">Resultados</h2>\r\n                </div>\r\n                <div className=\"grid grid-cols-1  sm:grid-cols-2 gap-4 \">\r\n                  <div>\r\n                    <ResultItem\r\n                      symbol=\"ρ\"\r\n                      label=\"Probabilidad de hallar el sistema ocupado\"\r\n                      value={result?.ro.toFixed(5)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"P0\"\r\n                      label=\"Probabilidad de hallar el sistema vacío\"\r\n                      value={result?.p0.toFixed(5)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"Pn\"\r\n                      label={labelPn}\r\n                      value={result?.pn.toFixed(5)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"Lq\"\r\n                      label=\"El número esperado de clientes en la cola\"\r\n                      value={result?.lq.toFixed(5)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"L\"\r\n                      label=\"El número esperado de clientes en el sistema\"\r\n                      value={result?.l.toFixed(5)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"Ln\"\r\n                      label=\"El número esperado de clientes en la cola no vacía\"\r\n                      value={result?.ln.toFixed(5)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <ResultItem\r\n                      symbol=\"Wq\"\r\n                      label=\"El tiempo esperado en la cola por los clientes\"\r\n                      value={result?.wq.toFixed(5)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"W\"\r\n                      label=\"El tiempo promedio esperado en el sistema por los clientes\"\r\n                      value={result?.w.toFixed(5)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"Wn\"\r\n                      label=\"El tiempo esperado en la cola para colas no vacías por los clientes\"\r\n                      value={result?.wn.toFixed(5)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"CTE\"\r\n                      label=\"Costo por clientes en Cola \"\r\n                      value={costoEspera.toFixed(3)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"CS\"\r\n                      label=\"Costo Servidor\"\r\n                      value={costoServidor.toFixed(3)}\r\n                    />\r\n                    <ResultItem\r\n                      symbol=\"CTS\"\r\n                      label=\"Costo por tiempo de Sistema \"\r\n                      value={costoDiario.toFixed(3)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=' ml-32 '>\r\n        <img src={Formulas_Pics} alt='Formulas PICS' className=' ml-32' />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MM1;\r\n","import { SystemOrQueuing, TypeCalculate } from '../Constants';\r\nimport { Division, Factorial, Power } from './../../../utils/MathUtils';\r\n\r\nexport class MMKModel {\r\n  // basic values\r\n  readonly lambda: number;\r\n  readonly miu: number;\r\n  readonly k: number;\r\n  readonly n: number;\r\n  readonly horas: number;\r\n  readonly espera: number;\r\n  readonly sistema: number;\r\n  readonly servidor: number;\r\n  // results\r\n  p0: number = 0;\r\n  pk: number = 0;\r\n  pne: number = 0;\r\n\r\n  pn: number = 0;\r\n  lq: number = 0;\r\n  l: number = 0;\r\n  wq: number = 0;\r\n  w: number = 0;\r\n  wn: number = 0;\r\n  ln: number = 0;\r\n\r\n\r\n  constructor(lambda: number, miu: number, k: number, n: number = 0, horas: number = 0, espera: number = 0, sistema: number = 0, servidor: number = 0) {\r\n    this.lambda = lambda;\r\n    this.miu = miu;\r\n    this.k = k;\r\n    this.n = n;\r\n    this.horas = horas;\r\n    this.espera = espera;\r\n    this.sistema = sistema;\r\n    this.servidor = servidor;\r\n  }\r\n\r\n  isMultichannel(): boolean {\r\n    return this.k > 1;\r\n  }\r\n\r\n  isStatable(): boolean {\r\n    let denominator = this.k * this.miu;\r\n    let condition = Division(this.lambda, denominator);\r\n    return condition < 1;\r\n  }\r\n\r\n  async calculateAll(\r\n    system: SystemOrQueuing = SystemOrQueuing.System,\r\n    typeCalculate: TypeCalculate = TypeCalculate.Fixed,\r\n  ): Promise<void> {\r\n    this.p0 = this.getP0();\r\n    this.pk = this.getPk();\r\n    this.pne = 1 - this.pk;\r\n    this.pn = this.getPn(system, typeCalculate);\r\n    this.l = this.getL();\r\n    this.lq = this.getLq();\r\n    this.ln = this.getLn();\r\n    this.w = this.getW();\r\n    this.wq = this.getWq();\r\n    this.wn = this.getWn();\r\n\r\n  }\r\n\r\n  // The probability P0 of finding the empty or idle system\r\n  private getP0(): number {\r\n    // summation\r\n    let summation = this.summationForP0();\r\n\r\n    // (1/k!)\r\n    let fact = Factorial(this.k);\r\n\r\n    let subItem1 = Division(1, fact);\r\n\r\n    // (lambda/miu)^k\r\n    let div = Division(this.lambda, this.miu);\r\n    let subItem2 = Power(div, this.k);\r\n\r\n    // ((k*miu)/(k*miu-lambda))\r\n    let numerator = this.k * this.miu;\r\n    let denominator = this.k * this.miu - this.lambda;\r\n    let subItem3 = Division(numerator, denominator);\r\n\r\n    let item2 = subItem1 * subItem2 * subItem3;\r\n\r\n    return Division(1, summation + item2);\r\n  }\r\n\r\n  private summationForP0(): number {\r\n    let value = 0;\r\n    for (let i = 0; i <= parseInt(this.k.toString()) - 1; i++) {\r\n      // (1/n!)\r\n      let fact = Factorial(i);\r\n      let item1 = Division(1, fact);\r\n\r\n      // (lambda/miu)^n\r\n      let div = Division(this.lambda, this.miu);\r\n      let poten = Power(div, i);\r\n\r\n      let operation = item1 * poten;\r\n      value += operation;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // The probability Pk that an arriving unit will have to wait\r\n  private getPk(): number {\r\n    // (1/k!)\r\n    let item1 = Division(1, Factorial(this.k));\r\n\r\n    // (lambda/miu)^k\r\n    let item2 = Power(Division(this.lambda, this.miu), this.k);\r\n\r\n    // ((k*miu)/(k*miu-lambda))\r\n    let numerator = this.k * this.miu;\r\n    let denominator = this.k * this.miu - this.lambda;\r\n    let item3 = Division(numerator, denominator);\r\n\r\n    // item1*item2*item3*P0\r\n    return item1 * item2 * item3 * this.p0;\r\n  }\r\n\r\n  // The probability Pn of finding exactly n customers in the system\r\n  private getPn(system: SystemOrQueuing, typeCalculate: TypeCalculate): number {\r\n    // Calculate Pn to finding client on System\r\n    if (system === SystemOrQueuing.System) {\r\n      // fixed SYSTEM\r\n      if (typeCalculate === TypeCalculate.Fixed) {\r\n        return this.basicPn(this.n);\r\n      }\r\n\r\n      // max SYSTEM\r\n      if (typeCalculate === TypeCalculate.Max) {\r\n        let value = 0;\r\n        for (let i = 0; i <= this.n; i++) {\r\n          value += this.basicPn(i);\r\n          // console.log('MAX SYSTEM', value, i);\r\n        }\r\n        return value;\r\n      }\r\n\r\n      // at least SYSTEM\r\n      if (typeCalculate === TypeCalculate.AtLeast) {\r\n        let value = 0;\r\n        for (let i = 0; i < this.n; i++) {\r\n          value += this.basicPn(i);\r\n        }\r\n        return 1 - value;\r\n      }\r\n    }\r\n    // Calculate Pn to finding client on Queuing\r\n    if (system === SystemOrQueuing.Queuing) {\r\n      // fixed Queuing\r\n      if (typeCalculate === TypeCalculate.Fixed) {\r\n        return this.basicPn(this.n + this.k);\r\n      }\r\n\r\n      // max Queuing\r\n      if (typeCalculate === TypeCalculate.Max) {\r\n        let value = 0;\r\n        let end = this.n + this.k;\r\n        for (let i = 0; i <= end; i++) {\r\n          value += this.basicPn(i);\r\n        }\r\n        return value;\r\n      }\r\n\r\n      // at least Queuing\r\n      if (typeCalculate === TypeCalculate.AtLeast) {\r\n        let value = 0;\r\n        for (let i = 0; i <= this.n; i++) {\r\n          value += this.basicPn(i);\r\n        }\r\n        return 1 - value;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  private basicPn(n: number): number {\r\n    if (n < this.k) {\r\n      return this.calculatePnWhenNLessK(n);\r\n    } else {\r\n      return this.calculatePnWhenNHigherK(n);\r\n    }\r\n  }\r\n\r\n  private calculatePnWhenNLessK(n: number): number {\r\n    // (P0/n!)\r\n    let item1 = Division(this.p0, Factorial(n));\r\n\r\n    // (lambda/miu)^n\r\n    let item2 = Power(Division(this.lambda, this.miu), n);\r\n\r\n    // item1 * item2\r\n    return item1 * item2;\r\n  }\r\n\r\n  private calculatePnWhenNHigherK(n: number): number {\r\n    // (1/(k!(k)^n-k))\r\n    let fact = Factorial(this.k);\r\n    let pow = Power(this.k, n - this.k);\r\n    let item1 = Division(1, fact * pow);\r\n\r\n    // (lambda/miu)^n\r\n    let item2 = Power(Division(this.lambda, this.miu), n);\r\n\r\n    // item1*item2*P0\r\n    return item1 * item2 * this.p0;\r\n  }\r\n\r\n  // The expected number L of clients in the system\r\n  private getL(): number {\r\n    // (lambda/miu)\r\n    let lambdaDivMiu = Division(this.lambda, this.miu);\r\n\r\n    // lambda*miu*((lambda/miu)^k)\r\n    let pow = Power(lambdaDivMiu, this.k);\r\n    let numerator = this.lambda * this.miu * pow;\r\n    // (k-1)!(k*miu-lambda)^2\r\n    let fact = Factorial(this.k - 1);\r\n    let prod = this.k * this.miu - this.lambda;\r\n    let square = Power(prod, 2);\r\n    let denominator = fact * square;\r\n    // numerator/denominator\r\n    let subItem1 = Division(numerator, denominator);\r\n\r\n    // subItem1*P0\r\n    let item1 = subItem1 * this.p0;\r\n\r\n    // item1+(lambda/miu)\r\n    return item1 + lambdaDivMiu;\r\n  }\r\n\r\n  // The expected number Lq of clients in the queue\r\n  private getLq(): number {\r\n    // lambda*miu*((lambda/miu)^k)*P0\r\n    let pow = Power(Division(this.lambda, this.miu), this.k);\r\n    let numerator = this.lambda * this.miu * pow * this.p0;\r\n    // (k-1)!(k*miu-lambda)^2\r\n    let fact = Factorial(this.k - 1);\r\n    let prod = this.k * this.miu - this.lambda;\r\n    let square = Power(prod, 2);\r\n    let denominator = fact * square;\r\n    // numerator/denominator\r\n    return Division(numerator, denominator);\r\n  }\r\n\r\n  // The expected number Ln of clients in the non-empty queue\r\n  private getLn(): number {\r\n    return Division(this.lq, this.pk);\r\n  }\r\n\r\n  // The expected average time W in the system by the clients\r\n  private getW(): number {\r\n    // miu*((lambda/miu)^k)*P0\r\n    let pow = Power(Division(this.lambda, this.miu), this.k);\r\n    let numerator = this.miu * pow * this.p0;\r\n    // (k-1)!(k*miu-lambda)^2\r\n    let fact = Factorial(this.k - 1);\r\n    let prod = this.k * this.miu - this.lambda;\r\n    let square = Power(prod, 2);\r\n    let denominator = fact * square;\r\n    // numerator/denominator\r\n    let item1 = Division(numerator, denominator);\r\n\r\n    // (1/miu)\r\n    let item2 = Division(1, this.miu);\r\n\r\n    // item1+item2\r\n    return item1 + item2;\r\n  }\r\n\r\n  // The expected time Wq in the queue by the clients\r\n  private getWq(): number {\r\n    // miu*((lambda/miu)^k)*P0\r\n    let pow = Power(Division(this.lambda, this.miu), this.k);\r\n    let numerator = this.miu * pow * this.p0;\r\n    // (k-1)!(k*miu-lambda)^2\r\n    let fact = Factorial(this.k - 1);\r\n    let prod = this.k * this.miu - this.lambda;\r\n    let square = Power(prod, 2);\r\n    let denominator = fact * square;\r\n    // numerator/denominator\r\n    return Division(numerator, denominator);\r\n  }\r\n\r\n  // The expected time Wn in the queue for queues not empty by clients\r\n  private getWn(): number {\r\n    return Division(this.wq, this.pk);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { AppBar, Box, Typography } from '@material-ui/core';\r\n\r\nimport { MMKModel } from '../../library/queueing/formulas/MMK.model';\r\nimport ResultItem from '../results/ResultItem';\r\n\r\ninterface TabsMMKProps {\r\n  result: MMKModel;\r\n  labelPn: string;\r\n}\r\n\r\nconst TabsMMK = ({ result, labelPn }: TabsMMKProps) => {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  // eslint-disable-next-line\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" elevation={0}>\r\n     \r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n      <h2  className=\"font-bold text-2xl\">RESULTADO: Modelo poblacion infinita  - Multiples canales </h2>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8 \">\r\n          <div>\r\n            <ResultItem\r\n              symbol=\"P0\"\r\n              label=\"Probabilidad de hallar el sistema vacío\"\r\n              value={result?.p0.toFixed(5)}\r\n            />\r\n            <ResultItem\r\n              symbol=\"Pk\"\r\n              label=\"La probabilidad de que un usuario que llega tenga que esperar (k o más)\"\r\n              value={result?.pk.toFixed(5)}\r\n            />\r\n            <ResultItem\r\n              symbol=\"Pne\"\r\n              label=\"Probabilidad de que un usuario que llega no tenga que esperar\"\r\n              value={result?.pne.toFixed(5)}\r\n            />\r\n            <ResultItem\r\n              symbol=\"Pn\"\r\n              label={labelPn}\r\n              value={result?.pn.toFixed(5)}\r\n            />\r\n            <ResultItem\r\n              symbol=\"L\"\r\n              label=\"El número esperado de clientes en el sistema\"\r\n              value={result?.l.toFixed(5)}\r\n            />\r\n             <ResultItem\r\n              symbol=\"Lq\"\r\n              label=\"El número esperado de clientes en la cola\"\r\n              value={result?.lq.toFixed(5)}\r\n            />\r\n            <ResultItem\r\n              symbol=\"Ln\"\r\n              label=\"El número esperado de clientes en la cola no vacía\"\r\n              value={result?.ln.toFixed(5)}\r\n            />\r\n          </div>\r\n          <div>\r\n           \r\n            <ResultItem\r\n              symbol=\"W\"\r\n              label=\"El tiempo promedio esperado en el sistema por los clientes\"\r\n              value={result?.w.toFixed(5)}\r\n            />\r\n            <ResultItem\r\n              symbol=\"Wq\"\r\n              label=\"El tiempo esperado en la cola por los clientes\"\r\n              value={result?.wq.toFixed(5)}\r\n            />\r\n            <ResultItem\r\n              symbol=\"Wn\"\r\n              label=\"El tiempo esperado en la cola para colas no vacías por los clientes\"\r\n              value={result?.wn.toFixed(5)}\r\n            />\r\n             <ResultItem\r\n                    symbol=\"CTE\"\r\n                    label=\"Costo por clientes en Cola \"\r\n                    value={(result.lambda * result.horas *   result.wq * result.espera).toFixed(3)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"CS\"\r\n                    label=\"Costo Servidor\"\r\n                    value={(result.k * result.servidor).toFixed(3)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"CTS\"\r\n                    label=\"Costo por tiempo de Sistema \"\r\n                    value={( result.lambda * result.horas * result.w * result.sistema).toFixed(3)}\r\n                  />\r\n\r\n          </div>\r\n        </div>\r\n      </TabPanel>\r\n  \r\n    </>\r\n  );\r\n};\r\n// eslint-disable-next-line\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default TabsMMK;\r\n","export default __webpack_public_path__ + \"static/media/FORMULAS_PICM.431fe070.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\n\r\nimport Button, { ButtonType } from '../components/buttons/Button';\r\nimport Input, { InputTypes } from '../components/inputs/Input';\r\nimport OptionInput, {\r\n  OptionInputTypes,\r\n} from '../components/inputs/OptionInput';\r\nimport { MMKModel } from '../library/queueing/formulas/MMK.model';\r\nimport { SystemOrQueuing, TypeCalculate } from '../library/queueing/Constants';\r\nimport TabsMMK from '../components/tabs/TabsMMK';\r\nimport Formulas_Picm from '../assets/FORMULAS_PICM.jpg';\r\ntype MMKValues = {\r\n  lambda: number;\r\n  miu: number;\r\n  k: number;\r\n  n: number;\r\n  horas: number;\r\n  costoCola: number,\r\n  costoSistema: number;\r\n  costoServidor: number,\r\n  calculate: TypeCalculate;\r\n  system: SystemOrQueuing;\r\n};\r\n\r\nconst LabelSystemOrQueuing: any = {\r\n  system: 'el sistema',\r\n  queuing: 'la cola',\r\n};\r\n\r\nconst LabelTypeCalculate: any = {\r\n  fixed: 'exactamente',\r\n  max: 'máximo',\r\n  least: 'al menos',\r\n};\r\n\r\nconst MMK = () => {\r\n  const [showResult, setShowResult] = useState({ loading: false, show: false });\r\n  const [result, setResult] = useState<MMKModel>(new MMKModel(0, 0, 0, 0, 0, 0, 0));\r\n  const [labelPn, setLabelPn] = useState<string>('');\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm<MMKValues>();\r\n\r\n  const onSubmit: SubmitHandler<MMKValues> = async (data) => {\r\n    // parse data for avoid problems\r\n    let lambda = parseFloat(data.lambda.toString());\r\n    let miu = parseFloat(data.miu.toString());\r\n    let k = parseInt(data.k.toString());\r\n    let n = parseInt(data.n.toString());\r\n    let horas = parseInt(data.horas.toString());\r\n    let espera = parseInt(data.costoCola.toString());\r\n    let sistema = parseInt(data.costoSistema.toString());\r\n    let servidor = parseInt(data.costoServidor.toString());\r\n\r\n\r\n    const model = new MMKModel(lambda, miu, k, n, horas, espera, sistema, servidor);\r\n\r\n    if (!model.isMultichannel())\r\n      return alert('El problema no es de tipo M/M/K');\r\n\r\n    if (model.isStatable()) {\r\n      setShowResult({ loading: true, show: false });\r\n      await model.calculateAll(data.system, data.calculate);\r\n      setResult(model);\r\n      setLabel(n, data.calculate, data.system);\r\n      setShowResult({ loading: false, show: true });\r\n\r\n    } else {\r\n      alert('no cumple con la condición de estabilidad');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValue('calculate', TypeCalculate.Fixed);\r\n    setValue('system', SystemOrQueuing.System);\r\n  }, [setValue]);\r\n\r\n  const setLabel = (n: number, calculate: string, operation: string) => {\r\n    setLabelPn(`Probabilidad de hallar \r\n    ${LabelTypeCalculate[calculate] || 'exactamente'} \r\n    ${n} clientes en ${LabelSystemOrQueuing[operation] || 'el sistema'}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex ml-32 justify-end h-auto lg:items-center\">\r\n        <div className=\"flex flex-col rounded-xl w-full shadow-md overflow-hidden sm:w-11/12 lg:flex-row lg:w-11/12\">\r\n          <div className=\"bg-gray-300 px-6 pt-4 border w-auto\">\r\n            <div className=\"relative flex my-3 justify-center items-center\">\r\n              <Link\r\n                to=\"/\"\r\n                className=\"absolute left-0 hover:bg-gray-200 rounded-full p-2\"\r\n                title=\"back\"\r\n              >\r\n                <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\"\r\n                  />\r\n                </svg>\r\n              </Link>\r\n              <h2 className=\"font-bold text-2xl\">M/M/k</h2>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <Input\r\n                symbol=\"λ\"\r\n                label=\"tasa de llegada\"\r\n                name=\"lambda\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.lambda}\r\n                step=\"0.001\"\r\n                required={{ required: 'El campo es obligatorio' }}\r\n              />\r\n              <Input\r\n                symbol=\"μ\"\r\n                label=\"tasa de servicio\"\r\n                name=\"miu\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.miu}\r\n                container=\"mt-2 lg:mt-0\"\r\n                step=\"0.001\"\r\n                required={{ required: 'El campo es obligatorio' }}\r\n              />\r\n\r\n              <Input\r\n                symbol=\"k\"\r\n                label=\"número de servidores\"\r\n                name=\"k\"\r\n                placeholder=\"2\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.k}\r\n                container=\"mt-2\"\r\n                required={{\r\n                  required: 'El campo es obligatorio',\r\n                  min: {\r\n                    value: 2,\r\n                    message: 'Debe tener mínimo 2 servidores para ser M/M/K',\r\n                  },\r\n                }}\r\n              />\r\n              <div className=\"mt-2\">\r\n                <Input\r\n                  symbol=\"N\"\r\n                  label=\"clientes\"\r\n                  name=\"n\"\r\n                  placeholder=\"0\"\r\n                  type={InputTypes.Number}\r\n                  register={register}\r\n                  error={errors.n}\r\n                />\r\n              </div>\r\n              <div className=\"mt-1\">\r\n                <div className='costos'>\r\n                  <div>\r\n                    <Input\r\n                      symbol=\"$\"\r\n                      label=\"Costo por Cola\"\r\n                      name=\"costoCola\"\r\n                      placeholder=\"0\"\r\n                      type={InputTypes.Number}\r\n                      register={register}\r\n                      error={errors.n}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"mt-1\">\r\n                    <Input\r\n                      symbol=\"$\"\r\n                      label=\"Costo por Sistema\"\r\n                      name=\"costoSistema\"\r\n                      placeholder=\"0\"\r\n                      type={InputTypes.Number}\r\n                      register={register}\r\n                      error={errors.n}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <Input\r\n                      symbol=\"$\"\r\n                      label=\"Costo por servidor\"\r\n                      name=\"costoServidor\"\r\n                      placeholder=\"0\"\r\n                      type={InputTypes.Number}\r\n                      register={register}\r\n                      error={errors.n}\r\n                    />\r\n\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <Input\r\n                      symbol=\"⏳\"\r\n                      label=\"Horas \"\r\n                      name=\"horas\"\r\n                      placeholder=\"0\"\r\n                      type={InputTypes.Number}\r\n                      register={register}\r\n                      error={errors.n}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"ml-2 mt-2\">\r\n                <p>Opciones para calculo de Pn</p>\r\n                <div className=\"flex mt-1\">\r\n                  <div>\r\n                    <OptionInput\r\n                      label=\"Exactamente\"\r\n                      name=\"calculate\"\r\n                      option={TypeCalculate.Fixed}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n                    <OptionInput\r\n                      label=\"Al menos\"\r\n                      name=\"calculate\"\r\n                      option={TypeCalculate.AtLeast}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n                    <OptionInput\r\n                      label=\"Máximo\"\r\n                      name=\"calculate\"\r\n                      option={TypeCalculate.Max}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <OptionInput\r\n                      label=\"Sistema\"\r\n                      name=\"system\"\r\n                      option={SystemOrQueuing.System}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n                    <OptionInput\r\n                      label=\"Cola\"\r\n                      name=\"system\"\r\n                      option={SystemOrQueuing.Queuing}\r\n                      register={register}\r\n                      type={OptionInputTypes.Radio}\r\n                    />\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"my-8\">\r\n                <Button text=\"Calcular\" type={ButtonType.Submit} />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div\r\n            className={`w-auto lg:min-h-full flex justify-center border px-6 pt-4\r\n          ${!showResult.show ? 'bg-gray-200' : 'bg-white'}`}\r\n          >\r\n            {showResult.loading ? (\r\n              <p className=\"self-center my-36\">Calculando resultados...</p>\r\n            ) : !showResult.show ? (\r\n              <p className=\"self-center my-36\">\r\n                Presiona Calcular para ver los resultados\r\n              </p>\r\n            ) : (\r\n              <div>\r\n                <TabsMMK result={result} labelPn={labelPn} />\r\n\r\n                {/* <div className=\"relative flex my-3 justify-center items-center\">\r\n                <h2 className=\"font-bold text-2xl\">Resultados</h2>\r\n              </div> */}\r\n\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=' ml-32 '>\r\n        <img src={Formulas_Picm} alt='FORMULAS DE PICM'  className=' ml-32 '/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MMK;\r\n","import { SystemOrQueuing, TypeCalculate } from '../Constants';\r\nimport { Division, Factorial, Power } from './../../../utils/MathUtils';\r\n\r\nexport class MM1MMModel {\r\n  // basic values\r\n  readonly lambda: number;\r\n  readonly miu: number;\r\n  readonly m: number;\r\n  readonly n: number;\r\n  readonly horas: number;\r\n  readonly espera: number;\r\n  readonly sistema: number;\r\n  readonly servidor: number;\r\n  // results\r\n  p0: number = 0;\r\n  pe: number = 0;\r\n\r\n  pn: number = 0;\r\n  lq: number = 0;\r\n  l: number = 0;\r\n  wq: number = 0;\r\n  w: number = 0;\r\n  wn: number = 0;\r\n  ln: number = 0;\r\n  costoServidor =0;\r\n  costoSistema =0;\r\n  costoCola =0;\r\n\r\n  constructor(lambda: number, miu: number, m: number, n: number = 0 , horas: number = 0, espera: number = 0, sistema: number = 0, servidor: number = 0) {\r\n    this.lambda = lambda;\r\n    this.miu = miu;\r\n    this.m = m;\r\n    this.n = n;\r\n    this.horas = horas;\r\n    this.espera = espera;\r\n    this.sistema = sistema;\r\n    this.servidor = servidor;\r\n\r\n  }\r\n\r\n  async calculateAll(\r\n    system: SystemOrQueuing = SystemOrQueuing.System,\r\n    typeCalculate: TypeCalculate = TypeCalculate.Fixed,\r\n  ): Promise<void> {\r\n    this.p0 = this.getP0();\r\n    this.pe = 1 - this.p0;\r\n    this.pn = this.getPn(system, typeCalculate);\r\n    this.l = this.getL();\r\n    this.lq = this.getLq();\r\n    this.ln = this.getLn();\r\n\r\n    this.wq = this.getWq();\r\n    this.w = this.getW();\r\n    this.wn = this.getWn();\r\n    this.costoCola = this.lambda * this.horas * this.wq * this.espera;\r\n    this.costoServidor =  1 * this.servidor;\r\n    this.costoSistema =  this.lambda * this.horas * this.w * this.sistema;\r\n  }\r\n\r\n  // The probability P0 of finding the empty or idle system\r\n  private getP0(): number {\r\n    let sum = this.summationForP0();\r\n    return Division(1, sum);\r\n  }\r\n\r\n  private summationForP0(): number {\r\n    let value = 0;\r\n    for (let n = 0; n <= this.m; n++) {\r\n      // M!\r\n      let mFact = Factorial(this.m);\r\n      // (M - n)!\r\n      let susFact = Factorial(this.m - n);\r\n      // M!/(M - n)!\r\n      let item1 = Division(mFact, susFact);\r\n\r\n      // (lambda/miu)^n\r\n      let item2 = Power(Division(this.lambda, this.miu), n);\r\n      let val = item1 * item2;\r\n      value += val;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // The probability Pn of finding exactly n customers in the system\r\n  private getPn(system: SystemOrQueuing, typeCalculate: TypeCalculate): number {\r\n    // Calculate Pn to finding client on System\r\n    if (system === SystemOrQueuing.System) {\r\n      // fixed SYSTEM\r\n      if (typeCalculate === TypeCalculate.Fixed) {\r\n        return this.basicPn(this.n);\r\n      }\r\n\r\n      // max SYSTEM\r\n      if (typeCalculate === TypeCalculate.Max) {\r\n        let value = 0;\r\n        for (let i = 0; i <= this.n; i++) {\r\n          value += this.basicPn(i);\r\n          // console.log('MAX SYSTEM', value, i);\r\n        }\r\n        return value;\r\n      }\r\n\r\n      // at least SYSTEM\r\n      if (typeCalculate === TypeCalculate.AtLeast) {\r\n        let value = 0;\r\n        for (let i = 0; i < this.n; i++) {\r\n          value += this.basicPn(i);\r\n        }\r\n        return 1 - value;\r\n      }\r\n    }\r\n    // Calculate Pn to finding client on Queuing\r\n    if (system === SystemOrQueuing.Queuing) {\r\n      // fixed Queuing\r\n      if (typeCalculate === TypeCalculate.Fixed) {\r\n        return this.basicPn(this.n + 1);\r\n      }\r\n\r\n      // max Queuing\r\n      if (typeCalculate === TypeCalculate.Max) {\r\n        let value = 0;\r\n        let end = this.n + 1;\r\n        for (let i = 0; i <= end; i++) {\r\n          value += this.basicPn(i);\r\n        }\r\n        return value;\r\n      }\r\n\r\n      // at least Queuing\r\n      if (typeCalculate === TypeCalculate.AtLeast) {\r\n        let value = 0;\r\n        for (let i = 0; i <= this.n; i++) {\r\n          value += this.basicPn(i);\r\n        }\r\n        return 1 - value;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private basicPn(n: number): number {\r\n    // M!\r\n    let mFact = Factorial(this.m);\r\n    // (M - n)!\r\n    let susFact = Factorial(this.m - n);\r\n    // M!/(M - n)!\r\n    let item1 = Division(mFact, susFact);\r\n\r\n    // (lambda/miu)^n\r\n    let item2 = Power(Division(this.lambda, this.miu), n);\r\n\r\n    // item1 * item2 * P0\r\n    return item1 * item2 * this.p0;\r\n  }\r\n\r\n  // The expected number L of clients in the system\r\n  private getL(): number {\r\n    // miu/lambda\r\n    let div = Division(this.miu, this.lambda);\r\n    // 1 - P0\r\n    let sus = 1 - this.p0;\r\n    // (miu/lambda)*(1 - P0)\r\n    let item2 = div * sus;\r\n    // M - (miu/lambda)*(1 - P0)\r\n    return this.m - item2;\r\n  }\r\n\r\n  // The expected number Lq of clients in the queue\r\n  private getLq(): number {\r\n    // (lambda + miu)/lambda\r\n    let div = Division(this.lambda + this.miu, this.lambda);\r\n    // 1 - P0\r\n    let sus = 1 - this.p0;\r\n    // (miu/lambda)*(1 - P0)\r\n    let item2 = div * sus;\r\n    // M - (miu/lambda)*(1 - P0)\r\n    return this.m - item2;\r\n  }\r\n\r\n  // The expected number Ln of clients in the non-empty queue\r\n  private getLn(): number {\r\n    // Lq/Pe\r\n    return Division(this.lq, this.pe);\r\n  }\r\n\r\n  // The expected time Wq in the queue by the clients\r\n  private getWq(): number {\r\n    // (M - L)lambda\r\n    let denominator = (this.m - this.l) * this.lambda;\r\n    // Lq / (M - L)lambda\r\n    return Division(this.lq, denominator);\r\n  }\r\n\r\n  // The expected average time W in the system by the clients\r\n  private getW(): number {\r\n    // 1 / miu\r\n    let item2 = Division(1, this.miu);\r\n    // Wq + (1 / miu)\r\n    return this.wq + item2;\r\n  }\r\n\r\n  // The expected time Wn in the queue for queues not empty by clients\r\n  private getWn(): number {\r\n    return Division(this.wq, this.pe);\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/FORMULAS_PFCS.1a5a8372.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\n\r\nimport ResultItem from '../components/results/ResultItem';\r\nimport Button, { ButtonType } from '../components/buttons/Button';\r\nimport Input, { InputTypes } from '../components/inputs/Input';\r\nimport OptionInput, {\r\n  OptionInputTypes,\r\n} from '../components/inputs/OptionInput';\r\nimport { SystemOrQueuing, TypeCalculate } from '../library/queueing/Constants';\r\nimport { MM1MMModel } from '../library/queueing/formulas/MM1MM.model';\r\nimport FORMULAS_PFCS from '../assets/FORMULAS_PFCS.jpg';\r\n\r\ntype MM1MMValues = {\r\n  lambda: number;\r\n  miu: number;\r\n  m: number;\r\n  n: number;\r\n  horas: number;\r\n  costoCola: number,\r\n  costoSistema: number;\r\n  costoServidor: number,\r\n  calculate: TypeCalculate;\r\n  system: SystemOrQueuing;\r\n};\r\n\r\nconst LabelSystemOrQueuing: any = {\r\n  system: 'el sistema',\r\n  queuing: 'la cola',\r\n};\r\n\r\nconst LabelTypeCalculate: any = {\r\n  fixed: 'exactamente',\r\n  max: 'máximo',\r\n  least: 'al menos',\r\n};\r\n\r\nconst MM1MM = () => {\r\n  const [showResult, setShowResult] = useState({ loading: false, show: false });\r\n  const [result, setResult] = useState<MM1MMModel>();\r\n  const [labelPn, setLabelPn] = useState<string>('');\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm<MM1MMValues>();\r\n\r\n  const onSubmit: SubmitHandler<MM1MMValues> = async (data) => {\r\n    // parse data for avoid problems\r\n    let lambda = parseFloat(data.lambda.toString());\r\n    let miu = parseFloat(data.miu.toString());\r\n    let m = parseInt(data.m.toString());\r\n    let n = parseInt(data.n.toString());\r\n    let horas = parseInt(data.horas.toString());\r\n    let espera = parseInt(data.costoCola.toString());\r\n    let sistema = parseInt(data.costoSistema.toString());\r\n    let servidor = parseInt(data.costoServidor.toString());\r\n\r\n\r\n    \r\n    const model = new MM1MMModel(lambda, miu, m, n ,horas, espera, sistema, servidor);\r\n\r\n    setShowResult({ loading: true, show: false });\r\n    await model.calculateAll(data.system, data.calculate);\r\n    setResult(model);\r\n    setLabel(n, data.calculate, data.system);\r\n    setShowResult({ loading: false, show: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValue('calculate', TypeCalculate.Fixed);\r\n    setValue('system', SystemOrQueuing.System);\r\n  }, [setValue]);\r\n\r\n  const setLabel = (n: number, calculate: string, operation: string) => {\r\n    setLabelPn(`Probabilidad de hallar \r\n    ${LabelTypeCalculate[calculate] || 'exactamente'} \r\n    ${n} clientes en ${LabelSystemOrQueuing[operation] || 'el sistema'}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"flex mt-2 ml-32 justify-end h-auto lg:items-center\">\r\n      <div className=\"flex flex-col rounded-xl w-full shadow-md overflow-hidden sm:w-11/12 lg:flex-row lg:w-11/12\">\r\n        <div className=\"bg-gray-300 px-6 pt-4 border w-auto\">\r\n          <div className=\"relative flex my-3 justify-center items-center\">\r\n            <Link\r\n              to=\"/\"\r\n              className=\"absolute left-0 hover:bg-gray-200 rounded-full p-2\"\r\n              title=\"back\"\r\n            >\r\n              <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\"\r\n                />\r\n              </svg>\r\n            </Link>\r\n            <h2 className=\"font-bold text-2xl\">M/M/1/M/M</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n  \r\n              <Input\r\n                symbol=\"λ\"\r\n                label=\"tasa de llegada\"\r\n                name=\"lambda\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.lambda}\r\n                step=\"0.001\"\r\n                required={{ required: 'El campo es obligatorio' }}\r\n              />\r\n              <Input\r\n                symbol=\"μ\"\r\n                label=\"tasa de servicio\"\r\n                name=\"miu\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.miu}\r\n                step=\"0.001\"\r\n                required={{ required: 'El campo es obligatorio' }}\r\n              />\r\n            <Input\r\n              symbol=\"M\"\r\n              label=\"población conocida\"\r\n              name=\"m\"\r\n              placeholder=\"0\"\r\n              type={InputTypes.Number}\r\n              register={register}\r\n              error={errors.m}\r\n              required={{ required: 'El campo es obligatorio' }}\r\n              container=\"mt-2\"\r\n            />\r\n            <div className=\"mt-2\">\r\n              <Input\r\n                symbol=\"N\"\r\n                label=\"clientes\"\r\n                name=\"n\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.n}\r\n              />\r\n            </div>\r\n            <div className=\"mt-1\">\r\n              <div className='costos'>\r\n                <div>\r\n                  <Input\r\n                    symbol=\"$\"\r\n                    label=\"Costo por Cola\"\r\n                    name=\"costoCola\"\r\n                    placeholder=\"0\"\r\n                    type={InputTypes.Number}\r\n                    register={register}\r\n                    error={errors.n}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mt-1\">\r\n                  <Input\r\n                    symbol=\"$\"\r\n                    label=\"Costo por Sistema\"\r\n                    name=\"costoSistema\"\r\n                    placeholder=\"0\"\r\n                    type={InputTypes.Number}\r\n                    register={register}\r\n                    error={errors.n}\r\n                  />\r\n                </div>\r\n                <div className=\"mt-1\">\r\n                  <Input\r\n                    symbol=\"$\"\r\n                    label=\"Costo por servidor\"\r\n                    name=\"costoServidor\"\r\n                    placeholder=\"0\"\r\n                    type={InputTypes.Number}\r\n                    register={register}\r\n                    error={errors.n}\r\n                  />\r\n\r\n                </div>\r\n                <div className=\"mt-1\">\r\n                  <Input\r\n                    symbol=\"⏳\"\r\n                    label=\"Horas \"\r\n                    name=\"horas\"\r\n                    placeholder=\"0\"\r\n                    type={InputTypes.Number}\r\n                    register={register}\r\n                    error={errors.n}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ml-2 mt-2\">\r\n              <p>Opciones para calculo de Pn</p>\r\n              <div className=\"flex mt-1\">\r\n                <div>\r\n                  <OptionInput\r\n                    label=\"Exactamente\"\r\n                    name=\"calculate\"\r\n                    option={TypeCalculate.Fixed}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                  <OptionInput\r\n                    label=\"Al menos\"\r\n                    name=\"calculate\"\r\n                    option={TypeCalculate.AtLeast}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                  <OptionInput\r\n                    label=\"Máximo\"\r\n                    name=\"calculate\"\r\n                    option={TypeCalculate.Max}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <OptionInput\r\n                    label=\"Sistema\"\r\n                    name=\"system\"\r\n                    option={SystemOrQueuing.System}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                  <OptionInput\r\n                    label=\"Cola\"\r\n                    name=\"system\"\r\n                    option={SystemOrQueuing.Queuing}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"my-8\">\r\n              <Button text=\"Calcular\" type={ButtonType.Submit} />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div\r\n          className={`w-auto lg:min-h-full flex justify-center border px-6 pt-4\r\n        ${!showResult.show ? 'bg-gray-200' : 'bg-white'}`}\r\n        >\r\n          {showResult.loading ? (\r\n            <p className=\"self-center my-36\">Calculando resultados...</p>\r\n          ) : !showResult.show ? (\r\n            <p className=\"self-center my-36\">\r\n              Presiona Calcular para ver los resultados\r\n            </p>\r\n          ) : (\r\n            <div>\r\n              <div className=\"relative flex my-2  w-auto justify-center items-center\">\r\n                <h2 className=\"font-bold text-2xl\">Resultados</h2>\r\n              </div>\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8 \">\r\n                <div>\r\n                  <ResultItem\r\n                    symbol=\"P0\"\r\n                    label=\"Probabilidad de hallar el sistema vacío\"\r\n                    value={result?.p0.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Pe\"\r\n                    label=\"Probabilidad de hallar el sistema ocupado\"\r\n                    value={result?.pe.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Pn\"\r\n                    label={labelPn}\r\n                    value={result?.pn.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"L\"\r\n                    label=\"El número esperado de clientes en el sistema\"\r\n                    value={result?.l.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Lq\"\r\n                    label=\"El número esperado de clientes en la cola\"\r\n                    value={result?.lq.toFixed(5)}\r\n\r\n                  />\r\n                   <ResultItem\r\n                    symbol=\"Ln\"\r\n                    label=\"El número esperado de clientes en la cola no vacía\"\r\n                    value={result?.ln.toFixed(5)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                 \r\n                  <ResultItem\r\n                    symbol=\"Wq\"\r\n                    label=\"El tiempo esperado en la cola por los clientes\"\r\n                    value={result?.wq.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"W\"\r\n                    label=\"El tiempo promedio esperado en el sistema por los clientes\"\r\n                    value={result?.w.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Wn\"\r\n                    label=\"El tiempo esperado en la cola para colas no vacías por los clientes\"\r\n                    value={result?.wn.toFixed(5)}\r\n                  />\r\n                        <ResultItem\r\n                    symbol=\"CTE\"\r\n                    label=\"Costo por clientes en Cola \"\r\n                    value={result?.costoCola.toFixed(3)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"CS\"\r\n                    label=\"Costo Servidor\"\r\n                    value={result?.costoServidor.toFixed(3)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"CTS\"\r\n                    label=\"Costo por tiempo de Sistema \"\r\n                    value={ result?.costoSistema.toFixed(3)}\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className='ml-32'>\r\n      <img  src={FORMULAS_PFCS} alt='PFCS'className='ml-32' />\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MM1MM;\r\n","import { SystemOrQueuing, TypeCalculate } from '../Constants';\r\nimport { Division, Factorial, Power } from './../../../utils/MathUtils';\r\n\r\nexport class MMKMMModel {\r\n  // basic values\r\n  readonly lambda: number;\r\n  readonly miu: number;\r\n  readonly m: number;\r\n  readonly k: number;\r\n  readonly n: number;\r\n  readonly horas: number;\r\n  readonly espera: number;\r\n  readonly sistema: number;\r\n  readonly servidor: number;\r\n\r\n  // results\r\n  p0: number = 0;\r\n  pe: number = 0;\r\n  pne: number = 0;\r\n\r\n  pn: number = 0;\r\n  lq: number = 0;\r\n  l: number = 0;\r\n  wq: number = 0;\r\n  w: number = 0;\r\n  wn: number = 0;\r\n  ln: number = 0;\r\n  costoServidor =0;\r\n  costoSistema =0;\r\n  costoCola =0;\r\n\r\n  constructor(\r\n    lambda: number,\r\n    miu: number,\r\n    k: number,\r\n    m: number,\r\n    n: number = 0,\r\n    horas: number = 0, espera: number = 0, sistema: number = 0, servidor: number = 0\r\n  ) {\r\n    this.lambda = lambda;\r\n    this.miu = miu;\r\n    this.k = k;\r\n    this.m = m;\r\n    this.n = n;\r\n    this.horas = horas;\r\n    this.espera = espera;\r\n    this.sistema = sistema;\r\n    this.servidor = servidor;\r\n  }\r\n\r\n  isMultichannel(): boolean {\r\n    return this.k > 1;\r\n  }\r\n\r\n  async calculateAll(\r\n    system: SystemOrQueuing = SystemOrQueuing.System,\r\n    typeCalculate: TypeCalculate = TypeCalculate.Fixed,\r\n  ): Promise<void> {\r\n    this.p0 = this.getP0();\r\n    this.pn = this.getPn(system, typeCalculate);\r\n    this.pe = this.getPe();\r\n    this.pne = 1 - this.pe;\r\n    this.l = this.getL();\r\n    this.lq = this.getLq();\r\n    this.ln = this.getLn();\r\n    this.wq = this.getWq();\r\n\r\n    this.w = this.getW();\r\n    this.wn = this.getWn();\r\n\r\n    this.costoCola = this.lambda * this.horas * this.wq * this.espera;\r\n    this.costoServidor =  this.k * this.servidor;\r\n    this.costoSistema =  this.lambda * this.horas * this.w * this.sistema;\r\n  }\r\n\r\n  // The probability P0 of finding the empty or idle system\r\n  private getP0(): number {\r\n    // summation\r\n    let summation1 = this.summation1ForP0();\r\n    let summation2 = this.summation2ForP0();\r\n\r\n    return Division(1, summation1 + summation2);\r\n  }\r\n\r\n  private summation1ForP0(): number {\r\n    let value = 0;\r\n    for (let n = 0; n <= parseInt(this.k.toString()) - 1; n++) {\r\n      // M!\r\n      let fact = Factorial(this.m);\r\n      // (M - n)!\r\n      let subItem1 = Factorial(this.m - n);\r\n      // n!\r\n      let subItem2 = Factorial(n);\r\n      // (M - n)!n!\r\n      let denominator = subItem1 * subItem2;\r\n      // M! / (M - n)!n!\r\n      let item1 = Division(fact, denominator);\r\n\r\n      // (lambda/miu)^n\r\n      let div = Division(this.lambda, this.miu);\r\n      let item2 = Power(div, n);\r\n\r\n      let operation = item1 * item2;\r\n      value += operation;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  private summation2ForP0(): number {\r\n    let value = 0;\r\n    for (let n = this.k; n <= this.m; n++) {\r\n      // M!\r\n      let fact = Factorial(this.m);\r\n      // (M - n)!\r\n      let subItem1 = Factorial(this.m - n);\r\n      // k!\r\n      let subItem2 = Factorial(this.k);\r\n      // k^n-k\r\n      let subItem3 = Power(this.k, n - this.k);\r\n      // (M - n)!k!k^n-k\r\n      let denominator = subItem1 * subItem2 * subItem3;\r\n      // M! / (M - n)!k!k^n-k\r\n      let item1 = Division(fact, denominator);\r\n\r\n      // (lambda/miu)^n\r\n      let div = Division(this.lambda, this.miu);\r\n      let item2 = Power(div, n);\r\n\r\n      let operation = item1 * item2;\r\n      value += operation;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // The probability Pn of finding exactly n customers in the system\r\n  private getPn(system: SystemOrQueuing, typeCalculate: TypeCalculate): number {\r\n    // Calculate Pn to finding client on System\r\n    if (system === SystemOrQueuing.System) {\r\n      // fixed SYSTEM\r\n      if (typeCalculate === TypeCalculate.Fixed) {\r\n        return this.basicPn(this.n);\r\n      }\r\n\r\n      // max SYSTEM\r\n      if (typeCalculate === TypeCalculate.Max) {\r\n        let value = 0;\r\n        for (let i = 0; i <= this.n; i++) {\r\n          value += this.basicPn(i);\r\n          // console.log('MAX SYSTEM', value, i);\r\n        }\r\n        return value;\r\n      }\r\n\r\n      // at least SYSTEM\r\n      if (typeCalculate === TypeCalculate.AtLeast) {\r\n        let value = 0;\r\n        for (let i = 0; i < this.n; i++) {\r\n          value += this.basicPn(i);\r\n        }\r\n        return 1 - value;\r\n      }\r\n    }\r\n    // Calculate Pn to finding client on Queuing\r\n    if (system === SystemOrQueuing.Queuing) {\r\n      // fixed Queuing\r\n      if (typeCalculate === TypeCalculate.Fixed) {\r\n        return this.basicPn(this.n + this.k);\r\n      }\r\n\r\n      // max Queuing\r\n      if (typeCalculate === TypeCalculate.Max) {\r\n        let value = 0;\r\n        let end = this.n + this.k;\r\n        for (let i = 0; i <= end; i++) {\r\n          value += this.basicPn(i);\r\n        }\r\n        return value;\r\n      }\r\n\r\n      // at least Queuing\r\n      if (typeCalculate === TypeCalculate.AtLeast) {\r\n        let value = 0;\r\n        for (let i = 0; i <= this.n; i++) {\r\n          value += this.basicPn(i);\r\n        }\r\n        return 1 - value;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  private basicPn(n: number): number {\r\n    if (0 <= n && n < this.k) {\r\n      return this.calculatePnWhenNLessK(n);\r\n    } else {\r\n      return this.calculatePnWhenNHigherK(n);\r\n    }\r\n  }\r\n\r\n  private calculatePnWhenNLessK(n: number): number {\r\n    // M!\r\n    let fact = Factorial(this.m);\r\n    // (M - n)!\r\n    let subItem1 = Factorial(this.m - n);\r\n    // n!\r\n    let subItem2 = Factorial(n);\r\n    // (M - n)!n!\r\n    let denominator = subItem1 * subItem2;\r\n    // M! / (M - n)!n!\r\n    let item1 = Division(fact, denominator);\r\n\r\n    // (lambda/miu)^n\r\n    let div = Division(this.lambda, this.miu);\r\n    let item2 = Power(div, n);\r\n\r\n    return this.p0 * item1 * item2;\r\n  }\r\n\r\n  private calculatePnWhenNHigherK(n: number): number {\r\n    // M!\r\n    let fact = Factorial(this.m);\r\n    // (M - n)!\r\n    let subItem1 = Factorial(this.m - n);\r\n    // k!\r\n    let subItem2 = Factorial(this.k);\r\n    // k^n-k\r\n    let subItem3 = Power(this.k, n - this.k);\r\n    // (M - n)!k!k^n-k\r\n    let denominator = subItem1 * subItem2 * subItem3;\r\n    // M! / (M - n)!k!k^n-k\r\n    let item1 = Division(fact, denominator);\r\n\r\n    // (lambda/miu)^n\r\n    let div = Division(this.lambda, this.miu);\r\n    let item2 = Power(div, n);\r\n\r\n    return this.p0 * item1 * item2;\r\n  }\r\n\r\n  // The probability Pe of finding the system busy\r\n  private getPe(): number {\r\n    let value = 0;\r\n    for (let n = this.k; n <= this.m; n++) {\r\n      value += this.basicPn(n);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // The expected number L of clients in the system\r\n  private getL(): number {\r\n    let sum1 = this.summation1ForL();\r\n    let sum2 = this.summation2ForL();\r\n    let sum3 = this.summation3ForL();\r\n    return sum1 + sum2 + sum3;\r\n  }\r\n\r\n  summation1ForL(): number {\r\n    let value = 0;\r\n    let end = this.k - 1;\r\n    for (let n = 0; n <= end; n++) {\r\n      // n*Pn\r\n      let operation = n * this.basicPn(n);\r\n      value += operation;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  summation2ForL(): number {\r\n    let value = 0;\r\n    for (let n = this.k; n <= this.m; n++) {\r\n      // n - k\r\n      let item1 = n - this.k;\r\n      // Pn\r\n      let item2 = this.basicPn(n);\r\n      // (n - k) *Pn\r\n      let operation = item1 * item2;\r\n      value += operation;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  summation3ForL(): number {\r\n    let value = 0;\r\n    let end = this.k - 1;\r\n    for (let n = 0; n <= end; n++) {\r\n      value += this.basicPn(n);\r\n    }\r\n    // 1 - sum(Pn)\r\n    let item1 = 1 - value;\r\n    // k * (1 - sum(Pn))\r\n    return this.k * item1;\r\n  }\r\n\r\n  // The expected number Lq of clients in the queue\r\n  private getLq(): number {\r\n    let value = 0;\r\n    for (let n = this.k; n <= this.m; n++) {\r\n      // n - k\r\n      let item1 = n - this.k;\r\n      // Pn\r\n      let item2 = this.basicPn(n);\r\n      // (n - k) * Pn\r\n      let operation = item1 * item2;\r\n      value += operation;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // The expected number Ln of clients in the non-empty queue\r\n  private getLn(): number {\r\n    return Division(this.lq, this.pe);\r\n  }\r\n\r\n  // The expected time Wq in the queue by the clients\r\n  private getWq(): number {\r\n    // (M - L) * lambda\r\n    let denominator = (this.m - this.l) * this.lambda;\r\n    return Division(this.lq, denominator);\r\n  }\r\n\r\n  // The expected average time W in the system by the clients\r\n  private getW(): number {\r\n    // 1 / miu\r\n    let item2 = Division(1, this.miu);\r\n    // Wq + (1 / miu)\r\n    return this.wq + item2;\r\n  }\r\n\r\n  // The expected time Wn in the queue for queues not empty by clients\r\n  private getWn(): number {\r\n    return Division(this.wq, this.pe);\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/FORMULAS_PFCM.2a43ac3f.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\n\r\nimport Button, { ButtonType } from '../components/buttons/Button';\r\nimport Input, { InputTypes } from '../components/inputs/Input';\r\nimport OptionInput, {\r\n  OptionInputTypes,\r\n} from '../components/inputs/OptionInput';\r\nimport { SystemOrQueuing, TypeCalculate } from '../library/queueing/Constants';\r\nimport { MMKMMModel } from '../library/queueing/formulas/MMKMM.model';\r\nimport ResultItem from '../components/results/ResultItem';\r\nimport FORMULAS_PFCM from '../assets/FORMULAS_PFCM.jpg'\r\n\r\ntype MMKMMValues = {\r\n  lambda: number;\r\n  miu: number;\r\n  k: number;\r\n  m: number;\r\n  n: number;\r\n  horas: number;\r\n  costoCola: number,\r\n  costoSistema: number;\r\n  costoServidor: number,\r\n  calculate: TypeCalculate;\r\n  system: SystemOrQueuing;\r\n};\r\n\r\nconst LabelSystemOrQueuing: any = {\r\n  system: 'el sistema',\r\n  queuing: 'la cola',\r\n};\r\n\r\nconst LabelTypeCalculate: any = {\r\n  fixed: 'exactamente',\r\n  max: 'máximo',\r\n  least: 'al menos',\r\n};\r\n\r\nconst MMKMM = () => {\r\n  const [showResult, setShowResult] = useState({ loading: false, show: false });\r\n  const [result, setResult] = useState<MMKMMModel>();\r\n  const [labelPn, setLabelPn] = useState<string>('');\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setValue,\r\n  } = useForm<MMKMMValues>();\r\n\r\n  const onSubmit: SubmitHandler<MMKMMValues> = async (data) => {\r\n    // parse data for avoid problems\r\n    let lambda = parseFloat(data.lambda.toString());\r\n    let miu = parseFloat(data.miu.toString());\r\n    let k = parseInt(data.k.toString());\r\n    let m = parseInt(data.m.toString());\r\n    let n = parseInt(data.n.toString());\r\n    let horas = parseInt(data.horas.toString());\r\n    let espera = parseInt(data.costoCola.toString());\r\n    let sistema = parseInt(data.costoSistema.toString());\r\n    let servidor = parseInt(data.costoServidor.toString());\r\n\r\n    const model = new MMKMMModel(lambda, miu, k, m, n,horas, espera, sistema, servidor);\r\n\r\n    if (!model.isMultichannel())\r\n      return alert('El problema no es de tipo M/M/k/M/M');\r\n\r\n    setShowResult({ loading: true, show: false });\r\n    await model.calculateAll(data.system, data.calculate);\r\n    setResult(model);\r\n    setLabel(n, data.calculate, data.system);\r\n    setShowResult({ loading: false, show: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValue('calculate', TypeCalculate.Fixed);\r\n    setValue('system', SystemOrQueuing.System);\r\n  }, [setValue]);\r\n\r\n  const setLabel = (n: number, calculate: string, operation: string) => {\r\n    setLabelPn(`Probabilidad de hallar \r\n    ${LabelTypeCalculate[calculate] || 'exactamente'} \r\n    ${n} clientes en ${LabelSystemOrQueuing[operation] || 'el sistema'}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"flex mt-2 ml-32 justify-end h-auto lg:items-center\">\r\n    <div className=\"flex flex-col rounded-xl w-full shadow-md overflow-hidden sm:w-11/12 lg:flex-row lg:w-11/12\">\r\n      <div className=\"bg-gray-300 px-6 pt-4 border w-auto\">\r\n        <div className=\"relative flex my-3 justify-center items-center\">  \r\n            <Link\r\n              to=\"/\"\r\n              className=\"absolute left-0 hover:bg-gray-200 rounded-full p-2\"\r\n              title=\"back\"\r\n            >\r\n              <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\"\r\n                />\r\n              </svg>\r\n            </Link>\r\n            <h2 className=\"font-bold text-2xl\">M/M/k/M/M</h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n          \r\n              <Input\r\n                symbol=\"λ\"\r\n                label=\"tasa de llegada\"\r\n                name=\"lambda\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.lambda}\r\n                step=\"0.001\"\r\n                required={{ required: 'El campo es obligatorio' }}\r\n              />\r\n              <Input\r\n                symbol=\"μ\"\r\n                label=\"tasa de servicio\"\r\n                name=\"miu\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.miu}\r\n                step=\"0.001\"\r\n                required={{ required: 'El campo es obligatorio' }}\r\n              />\r\n\r\n\r\n              <Input\r\n                symbol=\"M\"\r\n                label=\"población conocida\"\r\n                name=\"m\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.m}\r\n                required={{ required: 'El campo es obligatorio' }}\r\n                container=\"mt-2\"\r\n              />\r\n              <Input\r\n                symbol=\"k\"\r\n                label=\"número de servidores\"\r\n                name=\"k\"\r\n                placeholder=\"2\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.k}\r\n                container=\"mt-2\"\r\n                required={{\r\n                  required: 'El campo es obligatorio',\r\n                  min: {\r\n                    value: 2,\r\n                    message:\r\n                      'Debe tener mínimo 2 servidores para ser M/M/k/M/M',\r\n                  },\r\n                }}\r\n              />\r\n            <div className=\"mt-2\">\r\n              <Input\r\n                symbol=\"N\"\r\n                label=\"clientes\"\r\n                name=\"n\"\r\n                placeholder=\"0\"\r\n                type={InputTypes.Number}\r\n                register={register}\r\n                error={errors.n}\r\n              />\r\n            </div>\r\n            <div className=\"mt-1\">\r\n              <div className='costos'>\r\n                <div>\r\n                  <Input\r\n                    symbol=\"$\"\r\n                    label=\"Costo por Cola\"\r\n                    name=\"costoCola\"\r\n                    placeholder=\"0\"\r\n                    type={InputTypes.Number}\r\n                    register={register}\r\n                    error={errors.n}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mt-1\">\r\n                  <Input\r\n                    symbol=\"$\"\r\n                    label=\"Costo por Sistema\"\r\n                    name=\"costoSistema\"\r\n                    placeholder=\"0\"\r\n                    type={InputTypes.Number}\r\n                    register={register}\r\n                    error={errors.n}\r\n                  />\r\n                </div>\r\n                <div className=\"mt-1\">\r\n                  <Input\r\n                    symbol=\"$\"\r\n                    label=\"Costo por servidor\"\r\n                    name=\"costoServidor\"\r\n                    placeholder=\"0\"\r\n                    type={InputTypes.Number}\r\n                    register={register}\r\n                    error={errors.n}\r\n                  />\r\n\r\n                </div>\r\n                <div className=\"mt-1\">\r\n                  <Input\r\n                    symbol=\"⏳\"\r\n                    label=\"Horas \"\r\n                    name=\"horas\"\r\n                    placeholder=\"0\"\r\n                    type={InputTypes.Number}\r\n                    register={register}\r\n                    error={errors.n}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"ml-2 mt-2\">\r\n              <p>Opciones para calculo de Pn</p>\r\n              <div className=\"flex mt-1\">\r\n                <div>\r\n                  <OptionInput\r\n                    label=\"Exactamente\"\r\n                    name=\"calculate\"\r\n                    option={TypeCalculate.Fixed}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                  <OptionInput\r\n                    label=\"Al menos\"\r\n                    name=\"calculate\"\r\n                    option={TypeCalculate.AtLeast}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                  <OptionInput\r\n                    label=\"Máximo\"\r\n                    name=\"calculate\"\r\n                    option={TypeCalculate.Max}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <OptionInput\r\n                    label=\"Sistema\"\r\n                    name=\"system\"\r\n                    option={SystemOrQueuing.System}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                  <OptionInput\r\n                    label=\"Cola\"\r\n                    name=\"system\"\r\n                    option={SystemOrQueuing.Queuing}\r\n                    register={register}\r\n                    type={OptionInputTypes.Radio}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"my-8\">\r\n              <Button text=\"Calcular\" type={ButtonType.Submit} />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div\r\n          className={`w-auto lg:min-h-full flex justify-center border px-6 pt-4\r\n      ${!showResult.show ? 'bg-gray-200' : 'bg-white'}`}\r\n        >\r\n          {showResult.loading ? (\r\n            <p className=\"self-center my-36\">Calculando resultados...</p>\r\n          ) : !showResult.show ? (\r\n            <p className=\"self-center my-36\">\r\n              Presiona Calcular para ver los resultados\r\n            </p>\r\n          ) : (\r\n            <div>\r\n              <div className=\"relative flex my-3 justify-center items-center\">\r\n                <h2 className=\"font-bold text-2xl\">Resultados</h2>\r\n              </div>\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-8 \">\r\n                <div>\r\n                  <ResultItem\r\n                    symbol=\"P0\"\r\n                    label=\"Probabilidad de hallar el sistema vacío\"\r\n                    value={result?.p0.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Pe\"\r\n                    label=\"Probabilidad de hallar el sistema completamente ocupado\"\r\n                    value={result?.pe.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Pne\"\r\n                    label=\"Probabilidad de no esperar\"\r\n                    value={result?.pne.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Pn\"\r\n                    label={labelPn}\r\n                    value={result?.pn.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"L\"\r\n                    label=\"El número esperado de clientes en el sistema\"\r\n                    value={result?.l.toFixed(5)}\r\n                  />\r\n                   <ResultItem\r\n                    symbol=\"Lq\"\r\n                    label=\"El número esperado de clientes en la cola\"\r\n                    value={result?.lq.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Ln\"\r\n                    label=\"El número esperado de clientes en la cola no vacía\"\r\n                    value={result?.ln.toFixed(5)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                 \r\n                  <ResultItem\r\n                    symbol=\"W\"\r\n                    label=\"El tiempo promedio esperado en el sistema por los clientes\"\r\n                    value={result?.w.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Wq\"\r\n                    label=\"El tiempo esperado en la cola por los clientes\"\r\n                    value={result?.wq.toFixed(5)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"Wn\"\r\n                    label=\"El tiempo esperado en la cola para colas no vacías por los clientes\"\r\n                    value={result?.wn.toFixed(5)}\r\n                  />\r\n                       <ResultItem\r\n                    symbol=\"CTE\"\r\n                    label=\"Costo por clientes en Cola \"\r\n                    value={result?.costoCola.toFixed(3)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"CS\"\r\n                    label=\"Costo Servidor\"\r\n                    value={result?.costoServidor.toFixed(3)}\r\n                  />\r\n                  <ResultItem\r\n                    symbol=\"CTS\"\r\n                    label=\"Costo por tiempo de Sistema \"\r\n                    value={ result?.costoSistema.toFixed(3)}\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>FORMULAS </div>\r\n      </div>\r\n    </div>\r\n    <div className='ml-32'>\r\n      <img src={FORMULAS_PFCM} alt='PFCM'  className='ml-32'/>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MMKMM;\r\n","import React from 'react';\r\n\r\nconst ToDo = () => {\r\n  return (\r\n    <div\r\n      className=\"flex justify-center h-full items-center\"\r\n      style={{ minHeight: 'inherit' }}\r\n    >\r\n      <div className=\"flex flex-col justify-center items-center p-6 border rounded-md bg-white shadow-md\">\r\n        <h2 className=\"text-3xl font-bold text-center py-3\">\r\n          Ups... Esta pagina esta incompleta\r\n        </h2>\r\n        <p className=\"text-base text-center py-2\">\r\n          Estamos trabajando en esta pagina, de momento mira estos gatitos\r\n        </p>\r\n        <img\r\n          className=\"w-64 h-44 rounded-md shadow-sm\"\r\n          src=\"https://www.trecebits.com/wp-content/uploads/2015/08/slide_303383_2577027_free.gif\"\r\n          alt=\"gatitos\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Routes from '../config/name.routes';\r\nimport Home from '../views/Home';\r\n// import About from '../views/About';\r\nimport NotFoundPage from '../views/_404';\r\nimport MM1 from '../views/MM1';\r\nimport MMK from '../views/MMK';\r\nimport MM1MM from '../views/MM1MM';\r\nimport MMKMM from '../views/MMKMM';\r\nimport ToDo from '../views/ToDo';\r\n\r\nconst MainStack = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={Routes.home} exact component={Home} />\r\n      <Route path={Routes.about} exact component={ToDo} />\r\n      <Route path={Routes.theory} exact component={ToDo} />\r\n      <Route path={Routes.m_m_1} exact component={MM1} />\r\n      <Route path={Routes.m_m_k} exact component={MMK} />\r\n      <Route path={Routes.m_m_1_m_m} exact component={MM1MM} />\r\n      <Route path={Routes.m_m_k_m_m} exact component={MMKMM} />\r\n      <Route path=\"*\" component={NotFoundPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default MainStack;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Toolbar from '../components/navigation/Toolbar';\r\nimport MainStack from '../routes/MainStack';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"h-screen overflow-hidden\">\r\n        <Toolbar heightVh={8} />\r\n        <div className=\"main-container overflow-y-auto\">\r\n          <MainStack />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}